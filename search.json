[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fisheries Integrated Modeling System case studies",
    "section": "",
    "text": "These case studies demonstrate use of the Fisheries Integrated Modeling System to run a few different cases of stock assessment models.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html",
    "href": "content/SWFSC-sardine.html",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#the-setup",
    "href": "content/SWFSC-sardine.html#the-setup",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#add-a-chunk-of-code-describing-your-setup",
    "href": "content/SWFSC-sardine.html#add-a-chunk-of-code-describing-your-setup",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "Add a chunk of code describing your setup",
    "text": "Add a chunk of code describing your setup\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: Pacific sardine northern subpopulation\n\nRegion: SWFSC\n\nAnalyst: Peter Kuriyama",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#add-a-bulleted-list-and-script-describing-simplifications-you-had-to-make",
    "href": "content/SWFSC-sardine.html#add-a-bulleted-list-and-script-describing-simplifications-you-had-to-make",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "Add a bulleted list and script describing simplifications you had to make",
    "text": "Add a bulleted list and script describing simplifications you had to make\nHow I simplified my assessment * Convert two-semester time step to annual * Sum the catch values for MexCal S1 and S2 * Sum the age comps for MexCal S1 and S2 * Drop PNW fishing fleet data (catch and age comp data) * Drop spring AT survey index values * Use expected summary biomass values as AT survey CPUE * Fix Q=1 for AT survey, rather than have fixed, year-specific values * No SR_regime parameter estimated (population assumed to start a equilibrium) * Fixed M at 0.8 * Assume time-invariant logistic selectivity AT survey fleets (time-varying age-0 in benchmark assessment) * Assume time-invariant logistic selectivity MexCal fleet (time-varying in benchmark assessment) * Lorenzen age M -&gt; one M value * No ageing error in FIMS? * Assume time-invariant weight at age for the fishery and survey",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#add-your-script-that-sets-up-and-runs-the-model",
    "href": "content/SWFSC-sardine.html#add-your-script-that-sets-up-and-runs-the-model",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "Add your script that sets up and runs the model",
    "text": "Add your script that sets up and runs the model\n\n\nCode\n# options(max.print = 1000, device = 'windows')\n# \n# library(plyr)\n# library(reshape2)\n# library(tidyverse)\n# library(devtools)\n# library(patchwork)\n# library(scales)\n# withr::local_options(pkg.build_extra_flags = FALSE)\n# \n# library(TMB)\n# # devtools::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\n# library(TMBhelper)\n# library(r4ss)\n# \n# #Local version of FIMS downloaded last week\n# # devtools::load_all(\"../fims_v2/FIMS\")\n# \n# \n# # devtools::install_github(\"NOAA-FIMS/FIMS\")\n# # pak::pkg_install(\"NOAA-FIMS/FIMS\")\n# \n# library(FIMS)\n\nclear()\nrm(list = ls())\n\n#--------------------------------------------------------\n#Logistic function for later use\nlogistic &lt;- function(x, slope, inflection_point){\n  out &lt;- 1 / (1 + exp(-1 * slope * (x - inflection_point)))\n  out &lt;- data.frame(x = x, value = out)\n  return(out)\n}\n\n#--------------------------------------------------------\n#Manually enter data\n\n# setwd(\"C://Users//peter.kuriyama//SynologyDrive/Research//noaa//FIMS\")\n\n#-----Catch\ncatch &lt;- data.frame(year = 2005:2023, catch = c(29188.50, 53107.00, 69929.40, \n                                                56317.80, 33546.40, 17466.40, 39383.10, 2585.38, 5705.77, 2558.63, 7.18, 428.26, \n                                                347.11, 514.20, 619.04, 653.15, 285.89, 508.02, 152.31))\n\n# ggplot(catch, aes(x = year, y = catch)) + geom_point() + \n#   geom_line() + scale_y_continuous(label = comma)\n\n\nfimscatch &lt;- tibble(type = \"landings\", name = \"fleet1\",\n                    age = NA, datestart = paste0(catch$year, \"-01-01\"),\n                    dateend = paste0(catch$year, \"-12-31\"), value = catch$catch,\n                    unit = \"mt\", uncertainty = 0.05)\n\n#-----CPUE\ncpue &lt;- data.frame(year = 2005:2023, obs = c(649619.0, 899635.0, 956354.0, 863281.0, 652029.0, \n                                             504970.0, 395783.0, 293980.0, 182417.0, 89260.1, \n                                             46403.0, 40704.0, 44592.1, 48789.1, 53551.8, \n                                             59765.8, 68451.7, 71612.5, 68957.9))\n\n\n# ggplot(cpue, aes(x = year, y = obs)) + geom_point() + geom_line() + \n#   scale_y_continuous(label = comma)\n\nfimsindex &lt;- tibble(type = \"index\", name = \"survey1\",\n                    age = NA, datestart = paste0(cpue$year, \"-01-01\"),\n                    dateend = paste0(cpue$year, \"-12-31\"),\n                    value = cpue$obs, unit = 'mt', uncertainty = .3)\n\n#-----Age compositions\nacomps &lt;- read.csv(\"data_files/sardine_acomps.csv\")\n\nfimsage &lt;- tibble(type = \"age\", name = acomps$name,\n                  age = acomps$age, datestart = paste0(acomps$Yr, \"-01-01\"),\n                  dateend = paste0(acomps$Yr, \"-12-31\"),\n                  value = acomps$value, unit = \"\", uncertainty = acomps$Nsamp)\n\n\n#fimsage$uncertainty &lt;- 50 Leave as empirical values\n\nfimscatch$value &lt;- fimscatch$value\nfimsindex$unit &lt;- \"\"\n\n#Combine everything\nfimsdat &lt;- rbind(fimscatch, fimsindex, fimsage)\n\nfimsdat$age &lt;- as.integer(fimsdat$age) \nfimsdat$value &lt;- as.numeric(fimsdat$value)\n\nyears &lt;- 2005:2023\n\nages &lt;- unique(fimsage$age) ##age 0:8\n\n# ages &lt;- ss3dat$agebin_vector\nnages &lt;- length(ages)\nnyears &lt;- length(years)\nnseasons &lt;- 1\n\n# ages &lt;- 0:ss3dat$Nages # population ages in SS3, starts at age 0\n\nnfleets &lt;- 2 #survey and one fishery\n\n#Which fleet is first input? This corresponds to the output I think\n\n#------------------------\n#FIMS data input\nfimsdat &lt;- as.data.frame(fimsdat)\n\nage_frame &lt;- FIMS::FIMSFrame(fimsdat) #Cannot be FIMSFrame\n\nfishery_catch &lt;- FIMS::m_landings(age_frame)\nfishery_agecomp &lt;- FIMS::m_agecomp(age_frame, \"fleet1\")\nsurvey_index &lt;- FIMS::m_index(age_frame, \"survey1\")\nsurvey_agecomp &lt;- FIMS::m_agecomp(age_frame, \"survey1\")\n\n#---------------------------------------\n#Fishing fleet index\nfish_index &lt;- methods::new(Index, nyears)\nfish_age_comp &lt;- methods::new(AgeComp, nyears, nages)\nfish_index$index_data &lt;- fishery_catch\n\n\n\n# Q: I'm confused about FIMSFrame being set up with age comps in proportions\n#   vs here needing age comps in numbers\n# A: It's just not sorted out in FIMS yet, in the future this could be made simpler\nfish_age_comp$age_comp_data &lt;- age_frame@data |&gt;\n  dplyr::filter(type == \"age\" & name == \"fleet1\") |&gt;\n  dplyr::mutate(n = value * uncertainty) |&gt;\n  dplyr::pull(n) |&gt;\n  round(1)\n\nn_missing_data &lt;- nyears * nages - length(fish_age_comp$age_comp_data) \n\n\n#Check dimensions of age composition data\n# matrix(fish_age_comp$age_comp_data, nyears, nages)\n\n\nfish_age_comp$age_comp_data &lt;- c(rep(-999, n_missing_data), \n                                 fish_age_comp$age_comp_data)\n\n\n# switches to turn on or off estimation\nestimate_fish_selex &lt;- FALSE\nestimate_survey_selex &lt;- FALSE\nestimate_q &lt;- FALSE #Fix at 1\nestimate_F &lt;- TRUE\nestimate_recdevs &lt;- TRUE\nestimate_init_naa &lt;- TRUE \nestimate_log_rzero &lt;- TRUE\n\n#---------------------------------------\n#Fishery module\n#---------------------------------------\n#Just one combined MexCal fleet\n\n### set up fishery\n## methods::show(DoubleLogisticSelectivity)\nfish_selex &lt;- methods::new(LogisticSelectivity)\n\n#Use parameters close to those estimated in SS model  \nfish_selex$inflection_point$value &lt;- 1 #Fishery selectivity\nfish_selex$inflection_point$is_random_effect &lt;- FALSE\nfish_selex$inflection_point$estimated &lt;- estimate_fish_selex #Estimation on\n\nfish_selex$slope$value &lt;- 5\nfish_selex$slope$is_random_effect &lt;- FALSE\nfish_selex$slope$estimated &lt;- estimate_fish_selex #Estimation on\n#\n\n## create fleet object for fishing \nfish_fleet &lt;- methods::new(Fleet)\nfish_fleet$nages &lt;- nages\nfish_fleet$nyears &lt;- nyears\nfish_fleet$log_Fmort &lt;- log(rep(0.2, nyears))\n\n\nfish_fleet$estimate_F &lt;- estimate_F\nfish_fleet$random_F &lt;- FALSE\nfish_fleet$log_q &lt;- 0 #Not sure if this will be right\nfish_fleet$estimate_q &lt;- estimate_q\nfish_fleet$random_q &lt;- FALSE\n\n\nfish_fleet$log_obs_error &lt;- rep(log(sqrt(log(0.01^2 + 1))), nyears)\n\n\n# The pos argument can specify the environment in which to assign the object in \n#any of several ways: as -1 (the default), as a positive integer \n#(the position in the search list); as the character string name of an element \n#in the search list; or as an environment (including using sys.frame to access \n#the currently active function calls).\n\n# Set Index, AgeComp, and Selectivity using the IDs from the modules defined above\nfish_fleet$SetAgeCompLikelihood(1)\nfish_fleet$SetIndexLikelihood(1)\nfish_fleet$SetObservedIndexData(fish_index$get_id()) \nfish_fleet$SetObservedAgeCompData(fish_age_comp$get_id())\nfish_fleet$SetSelectivity(fish_selex$get_id())\n\n##---- Setup survey\nsurvey_fleet_index &lt;- methods::new(Index, nyears)\nsurvey_age_comp &lt;- methods::new(AgeComp, nyears, nages)\nsurvey_fleet_index$index_data &lt;- survey_index\n\nsurvey_age_comp$age_comp_data &lt;- age_frame@data |&gt;\n  dplyr::filter(type == \"age\" & name == \"survey1\") |&gt;\n  dplyr::mutate(n = value * uncertainty) |&gt;\n  dplyr::pull(n)\nn_missing_data &lt;- nyears * nages - length(survey_age_comp$age_comp_data) \nsurvey_age_comp$age_comp_data &lt;- c(rep(-999, n_missing_data), survey_age_comp$age_comp_data)\n\n\n## survey selectivity: ascending logistic\n## methods::show(DoubleLogisticSelectivity)\nsurvey_selex &lt;- new(LogisticSelectivity)\nsurvey_selex$inflection_point$value &lt;- 1.2\nsurvey_selex$inflection_point$is_random_effect &lt;- FALSE\nsurvey_selex$inflection_point$estimated &lt;- estimate_survey_selex\nsurvey_selex$slope$value &lt;- 2\nsurvey_selex$slope$is_random_effect &lt;- FALSE\nsurvey_selex$slope$estimated &lt;- estimate_survey_selex\n\n\n## create fleet object for survey\nsurvey_fleet &lt;- methods::new(Fleet)\nsurvey_fleet$is_survey &lt;- TRUE\nsurvey_fleet$nages &lt;- nages\nsurvey_fleet$nyears &lt;- nyears\nsurvey_fleet$estimate_F &lt;- FALSE\nsurvey_fleet$random_F &lt;- FALSE\nsurvey_fleet$log_q &lt;- 0 # catchability fixed ~1.0 = exp(0)\nsurvey_fleet$estimate_q &lt;- estimate_q\nsurvey_fleet$random_q &lt;- FALSE\n# Q: why can't the index uncertainty come from FIMSFrame?\nsurvey_fleet$log_obs_error &lt;- rep(log(sqrt(log(0.1^2 + 1))), nyears)\n\nsurvey_fleet$SetAgeCompLikelihood(1)\nsurvey_fleet$SetIndexLikelihood(1)\nsurvey_fleet$SetSelectivity(survey_selex$get_id())\nsurvey_fleet$SetObservedIndexData(survey_fleet_index$get_id())\nsurvey_fleet$SetObservedAgeCompData(survey_age_comp$get_id())\n\n# Population module\n\n# recruitment\nrecruitment &lt;- methods::new(BevertonHoltRecruitment)\n# methods::show(BevertonHoltRecruitment)\n\n#sardine sigmaR = 1.2\nrecruitment$log_sigma_recruit$value &lt;- log(1.2) #14.2 is log(R0) in sardine simplified model\nrecruitment$log_sigma_recruit$estimated &lt;- FALSE\n\n\n#14.2 is log(R0) in sardine simplified model\nrecruitment$log_rzero$value &lt;- 17\nrecruitment$log_rzero$is_random_effect &lt;- FALSE\nrecruitment$log_rzero$estimated &lt;- TRUE\n# sardine steepness is fixed at 0.6\nsteep &lt;- .6\nrecruitment$logit_steep$value &lt;- -log(1.0 - steep) + log(steep - 0.2)\nrecruitment$logit_steep$is_random_effect &lt;- FALSE\nrecruitment$logit_steep$estimated &lt;- FALSE\n\nrecruitment$estimate_log_devs &lt;- estimate_recdevs\n# Q: why are parameters \"log_devs\" when output is \"report$log_recruit_dev\"?\n# and are they multipliers, not deviations from zero?\n# needed to change from 1 to 0 to get stable population\nrecruitment$log_devs &lt;- rep(log(1), nyears) # set to no deviations (multiplier) to start\n\n# growth\nwtatage &lt;- r4ss::SS_readwtatage(\"data_files/sardine_wtatage.ss_new\")\n\newaa_growth &lt;- methods::new(EWAAgrowth)\newaa_growth$ages &lt;- ages\n# NOTE: getting weight-at-age vector from\n# petrale_output$wtatage |&gt;\n#   dplyr::filter(Sex == 1 & Fleet == -1 & Yr == 1876) |&gt;\n#   dplyr::select(paste(0:40)) |&gt;\n#   round(4)\n# ewaa_growth$weights &lt;- c(0.019490,0.077760,0.108865,\n#                          0.133855,0.154360,0.174905,0.184200,\n#                          0.196460,0.214155)\n\n\newaa_growth$weights &lt;- wtatage %&gt;% filter(Fleet == 1, Yr == 2010) %&gt;% select(as.character(0:10))  %&gt;% t %&gt;%\n  as.vector\n\n# maturity\nmaturity &lt;- new(LogisticMaturity)\n# approximate age-based equivalent to length-based maturity in petrale model\n# based on looking at model$endgrowth |&gt; dplyr::filter(Sex == 1) |&gt; dplyr::select(Age_Beg, Len_Mat)\nmaturity$inflection_point$value &lt;- 1.2\nmaturity$inflection_point$is_random_effect &lt;- FALSE\nmaturity$inflection_point$estimated &lt;- FALSE\nmaturity$slope$value &lt;- 1.5 # arbitrary guess\nmaturity$slope$is_random_effect &lt;- FALSE\nmaturity$slope$estimated &lt;- FALSE\n\n#Look at maturity curve\n# logistic(0:8, slope = maturity$slope$value,\n#          inflection_point = maturity$inflection_point$value) %&gt;% ggplot(aes(x = x, y = value)) +\n#   geom_point() + geom_line() + scale_y_continuous(limits = c(0, 1))\n\n\n# population\npopulation &lt;- new(Population)\n# petrale natural mortality is estimated around 0.14\nM_value &lt;- .8 #.8 worked pretty well\npopulation$log_M &lt;- rep(log(M_value), nages * nyears)\n\npopulation$estimate_M &lt;- FALSE ###Anyway to control dimension of M estimation?\n\n\n# initial numbers at age based on R0 + mortality\ninit_naa &lt;- exp(recruitment$log_rzero$value) * exp(-(ages - 1) * M_value)\ninit_naa[nages] &lt;- init_naa[nages] / M_value # sum of infinite series\npopulation$log_init_naa &lt;- log(init_naa)\npopulation$estimate_init_naa &lt;- estimate_init_naa\n\npopulation$nages &lt;- nages\npopulation$ages &lt;- ages\npopulation$nfleets &lt;- 2 # fleets plus surveys\npopulation$nseasons &lt;- nseasons\npopulation$nyears &lt;- nyears\n# population$proportion_female &lt;- rep(0.5, nages)\n\npopulation$SetMaturity(maturity$get_id())\npopulation$SetGrowth(ewaa_growth$get_id())\npopulation$SetRecruitment(recruitment$get_id())\n\n# make FIMS model\nsuccess &lt;- CreateTMBModel()\nparameters &lt;- list(p = get_fixed())\n\n###expand years and ages\n# crossing(years, ages) %&gt;% mutate(ya = paste(years, ages)) %&gt;% pull(ya)\n\n#---------------------------------------------------------------------------\n#Clunky code to name parameter starting values/estimates to \n\n#Specification of estimation is estimated and estimate_F/estimate_M\nparname &lt;- 999\n\nif(fish_selex$inflection_point$estimated) parname &lt;- c(parname,\n                                                       \"fishery_selex_inf_poit\")\nif(fish_selex$slope$estimated) parname &lt;- c(parname, \"fishery_selec_slo\")\n\n\nif(fish_fleet$estimate_F) parname &lt;- c(parname, paste0(\"F_\", years))\n# if(fish_fleet$estimate_q)\n    \nif(survey_selex$inflection_point$estimated) parname &lt;- c(parname, \"survey_inf_poi\")\nif(survey_selex$slope$estimated) parname &lt;- c(parname, \"survey_inf_slo\" )\n\nif(recruitment$log_sigma_recruit$estimated) parname &lt;- c(parname, \"ln_sig_rec\")\nif(recruitment$log_rzero$estimated) parname &lt;- c(parname, \"ln_rzero\")\nif(recruitment$logit_steep$estimated) parname &lt;- c(parname, \"logi_h\")\n\nif(recruitment$estimate_log_devs) parname &lt;- c(parname, paste0(\"recdev_\", years))\n  \nif(maturity$inflection_point$estimated) parname &lt;- c(parname, \"mat_inf_poi\")\nif(maturity$slope$estimated) parname &lt;- c(parname, \"mat_slo\")\n\nif(population$estimate_M) parname &lt;- c(parname, paste0(\"M_\", \n                                                       crossing(years, ages) %&gt;% \n                                                         mutate(ya = paste(years, ages)) %&gt;% pull(ya)))\nif(population$estimate_init_naa) parname &lt;- c(parname, paste0(\"naa_\", ages))\n\nparname &lt;- parname[-1]\n\n\n#---------------------------------------------------------------------------\n#Run model\n#---------------------------------------------------------------------------\n\npars &lt;- tibble(parname = parname, startingvals = parameters$p)\n\n\nobj &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent = TRUE)\nreport &lt;- obj$report()\n\n#Are there flags for when something is going wrong with the model where initial values\n#are all 0?\nopt &lt;- nlminb(obj$par, obj$fn, obj$gr,\n              control = list(eval.max = 10000, iter.max = 10000)\n)\n\nsds &lt;- TMB::sdreport(obj)\n\nendres &lt;- obj$report(obj$env$last.par.best)\n\npars &lt;- pars %&gt;% mutate(endvals = sds$par.fixed) %&gt;%\n  as.data.frame",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#add-your-comparison-figures",
    "href": "content/SWFSC-sardine.html#add-your-comparison-figures",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "Add your comparison figures",
    "text": "Add your comparison figures\n\n\nCode\nload(\"data_files/sardine_simplified_res.Rdata\")\n\n#------------------------------------------------------------------------\n#------SSB\nssbs &lt;- ssres$timeseries %&gt;% select(Yr, SpawnBio) %&gt;% \n  mutate(fims = c(0, 0,  endres$ssb[[1]]))\nnames(ssbs)[2] &lt;- 'ss3'\n\nssbs %&gt;% filter(Yr &gt;= 2005, Yr &lt; 2024) %&gt;% melt(id.var = \"Yr\") %&gt;%\n  ggplot(aes(x = Yr, y = value, group = variable, color = variable)) +\n  geom_point() + geom_line() + ylab(\"Spawning biomass (mt)\") + theme_bw() +\n  xlab(\"year\") + theme(legend.position = c(.9, .9))\n\n\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"figures/SWFSC-sardine-sb.png\", width = 7.35, height = 4.8)\n\n#------------------------------------------------------------------------\n#------Index fits\nindex &lt;- ssres$cpue %&gt;% select(Yr, Obs, Exp) \nnames(index) &lt;- c(\"year\", 'obs', 'ss3')\nindex$fims &lt;- endres$exp_index[[2]]\nindex %&gt;% melt(id.var = c(\"year\", \"obs\")) %&gt;%\n  ggplot(aes(x = year)) + geom_point(aes(y = obs)) + \n  geom_line(aes(y = value, color = variable, group = variable)) +\n  theme_bw() + theme(legend.position = c(.9, .9)) + xlab(\"Year\") +\n  ylab(\"Survey biomass value (mt)\")\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"figures/SWFSC-sardine-surveyfit.png\", width = 6.8, height = 5.25)\n\n#------------------------------------------------------------------------\n#-----Calculate age-1+ biomass\n#Multiply numbers at age by weight at age and sum\nnaa &lt;- endres$naa[[1]]\n\nnaa1 &lt;- crossing(c(years, 2024), ages) %&gt;% mutate(naa = naa) %&gt;% as.data.frame\nnames(naa1) &lt;- c(\"year\", 'age', 'value')\nnaa1$cohort &lt;- naa1$year - naa1$age\n\n#Format Weight at age\nwaa &lt;- data.frame(age = ewaa_growth$ages, waa = ewaa_growth$weights[1:length(ages)])\n\nnaa1 &lt;- naa1 %&gt;% dplyr::left_join(waa)\n\n\nJoining with `by = join_by(age)`\n\n\nCode\nnaa1 &lt;- naa1 %&gt;% mutate(weight = value * waa)\nage1plus &lt;- naa1 %&gt;% filter(age != 0) %&gt;% group_by(year) %&gt;% summarize(summbio = sum(weight))\n\nbio1 &lt;- ssres$timeseries %&gt;% filter(Seas == 1) %&gt;% select(Yr, Bio_smry) %&gt;%\n  mutate(year = Yr, ss3bio = Bio_smry) %&gt;% select(-Yr, -Bio_smry)\n\n\nage1plus &lt;- age1plus %&gt;% dplyr::left_join(bio1)\n\n\nJoining with `by = join_by(year)`\n\n\nCode\nnames(age1plus) &lt;- c(\"year\", \"fims\", \"ss3\")\n\n#Full time series of age-1+ biomass\nage1plus %&gt;% melt(id.var = \"year\") %&gt;% ggplot(aes(x = year, y = value, group = variable, color = variable)) +\n  geom_point() + geom_line() + \n  ylab(\"Age-1+ biomass (mt)\") + theme_bw() + theme(legend.position = c(.9, .9))\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"figures/SWFSC-sardine-age1plusbio.png\", width = 6.8, height = 5.25)\n\n#Zoomed in time series of age-1+\nage1plus %&gt;% melt(id.var = \"year\") %&gt;% filter(year &gt;= 2010) %&gt;%\n  ggplot(aes(x = year, y = value, group = variable, color = variable)) +\n  geom_point() + geom_line() + theme_bw() +\n  ylab(\"Age-1+ biomass (mt)\") + theme(legend.position = c(.9, .9))\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"figures/SWFSC-sardine-age1plusbio_zoomedin.png\", width = 6.8, height = 5.25)\n\n\n#------------------------------------------------------------------------\n#------Recruitment\nrecs &lt;- ssres$timeseries %&gt;% select(Yr, Recruit_0) %&gt;%\n  mutate(fims = c(0, 0, endres$recruitment[[1]]))\nnames(recs)[2] &lt;- \"ss3\"\n\nrecs %&gt;% filter(Yr &gt;= 2005, Yr &lt; 2024) %&gt;% melt(id.var = \"Yr\") %&gt;%\n\n  ggplot(aes(x = Yr, y = value, group = variable, color = variable)) + theme_bw() +\n  geom_point() + geom_line() + theme(legend.position = c(.9, .9)) + ylab(\"Recruits (x1000)\")\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"figures/SWFSC-sardine-recruitment.png\", width = 6.8, height = 5.25)\n\n\n#------------------------------------------------------------------------\n#------Fixed selectivities\n#Are fixed but plot for comparison's sake\n##Fishery\n\nsel_fishery &lt;- logistic(ages, slope = fish_selex$slope$value, \n                        inflection_point = fish_selex$inflection_point$value)\n\nnames(sel_fishery) &lt;- c(\"age\", \"fims\")\n\nsel_fishery$ss3 &lt;- ssres$ageselex %&gt;% filter(Yr == 2005, \n                                             Factor == \"Asel\", Fleet == 1) %&gt;%\n  select(as.character(0:8)) %&gt;% t\nsel_fishery &lt;- sel_fishery %&gt;% melt(id.var = \"age\")\n\n\nWarning: attributes are not identical across measure variables; they will be\ndropped\n\n\nCode\nggplot(sel_fishery, aes(x = age, y = value, group = variable, color = variable)) + \n  geom_point() + geom_line()\n\n\n\n\n\n\n\n\n\nCode\n#-----------Survey\nsel_survey &lt;- logistic(ages, slope = survey_selex$slope$value, \n                       inflection_point = survey_selex$inflection_point$value)\n\nnames(sel_survey) &lt;- c(\"age\", 'fims')\n\nsel_survey$ss3 &lt;- ssres$ageselex %&gt;% filter(Yr == 2005, Factor == \"Asel\", Fleet == 2) %&gt;%\n  select(as.character(0:8)) %&gt;% t\nsel_survey &lt;- sel_survey %&gt;% melt(id.var = \"age\")\n\n\nWarning: attributes are not identical across measure variables; they will be\ndropped\n\n\nCode\nggplot(sel_survey, aes(x = age, y = value, group = variable, color = variable)) + \n  geom_point() + geom_line()",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#add-comparison-tables",
    "href": "content/SWFSC-sardine.html#add-comparison-tables",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "Add comparison tables",
    "text": "Add comparison tables",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "href": "content/SWFSC-sardine.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "What was your experience using FIMS? What could we do to improve usability?",
    "text": "What was your experience using FIMS? What could we do to improve usability?\nTools to check: * data were inputted correctly (dimension checks) * starting values and settings are reasonable * Perhaps have a model template file that will work as is, then users can modify as necessary * I had issues installing FIMS with install_github that seemed to be related to R settings\nModel: * streamline configuration of fleets and maybe make it easier to add additional fleets (perhaps clone existing ones then change specific settings) * Think about ways to modify single model settings based on say different starting values\nOutput: * include all parameter values and names (fixed and estimated, also show starting values) * Code to generate a default set of figures and tables for use in assessment documents/presentations",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#list-any-issues-that-you-ran-into-or-found",
    "href": "content/SWFSC-sardine.html#list-any-issues-that-you-ran-into-or-found",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "List any issues that you ran into or found",
    "text": "List any issues that you ran into or found\nPlease open an issue if you found something new.",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "href": "content/SWFSC-sardine.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "What features are most important to add based on this case study?",
    "text": "What features are most important to add based on this case study?\n\nThe ability to start the model at non-equilibrium conditions (In SS3 there is a SR_regime parameter and Initial F to match equilbirium age comps to first year of data age comps) *Does the model year start in the first year of the data input?",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/SWFSC-sardine.html#add-your-pages-to-the-project",
    "href": "content/SWFSC-sardine.html#add-your-pages-to-the-project",
    "title": "SWFSC Case Study Pacific sardine",
    "section": "Add your pages to the project",
    "text": "Add your pages to the project\n\nAdd the files to _quarto.yml",
    "crumbs": [
      "SWFSC sardine case study"
    ]
  },
  {
    "objectID": "content/AFSC-BSAI-AtkaMackerel.html",
    "href": "content/AFSC-BSAI-AtkaMackerel.html",
    "title": "AFSC Case Study BSAI Atka mackerel",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\ntheme_set(theme_bw())\n\n\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: BSAI Atka mackerel\n\nRegion: AFSC\n\nAnalyst: Jim Ianelli",
    "crumbs": [
      "AFSC BSAI Atka Mackerel case study"
    ]
  },
  {
    "objectID": "content/AFSC-BSAI-AtkaMackerel.html#the-setup",
    "href": "content/AFSC-BSAI-AtkaMackerel.html#the-setup",
    "title": "AFSC Case Study BSAI Atka mackerel",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\ntheme_set(theme_bw())\n\n\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: BSAI Atka mackerel\n\nRegion: AFSC\n\nAnalyst: Jim Ianelli",
    "crumbs": [
      "AFSC BSAI Atka Mackerel case study"
    ]
  },
  {
    "objectID": "content/AFSC-BSAI-AtkaMackerel.html#simplifications-to-the-original-assessment",
    "href": "content/AFSC-BSAI-AtkaMackerel.html#simplifications-to-the-original-assessment",
    "title": "AFSC Case Study BSAI Atka mackerel",
    "section": "Simplifications to the original assessment",
    "text": "Simplifications to the original assessment\nThe model presented in this case study was changed substantially from the operational version and should not be considered reflective of the BSAI Atka mackerel stock.\nTo get the opertional model to more closely match FIMS I: * stumbled lots",
    "crumbs": [
      "AFSC BSAI Atka Mackerel case study"
    ]
  },
  {
    "objectID": "content/AFSC-BSAI-AtkaMackerel.html#script-to-prepare-data-for-building-fims-object",
    "href": "content/AFSC-BSAI-AtkaMackerel.html#script-to-prepare-data-for-building-fims-object",
    "title": "AFSC Case Study BSAI Atka mackerel",
    "section": "Script to prepare data for building FIMS object",
    "text": "Script to prepare data for building FIMS object\n\n\nCode\n## define the dimensions and global variables\n#  Opent the original AMAK file\natka_dat &lt;- readRDS(here::here(\"content\",\"data_files\",\"atka_dat.RDS\"))\natka_rep &lt;- readRDS(here::here(\"content\",\"data_files\",\"atka_rep.RDS\"))\n## define the dimensions and global variables\nyears &lt;- atka_dat$styr:atka_dat$endyr\nnyears &lt;- length(years)\nnseasons &lt;- 1\nnages &lt;- 11\nages &lt;- 1:nages\n## nfleets &lt;- 1\n## This will fit the models bridging to FIMS (simplifying)\n## source(\"fit_bridge_models.R\")\n## compare changes to model\n#pkfitfinal &lt;- readRDS(\"data_files/pkfitfinal.RDS\")\n#pkfit0 &lt;- readRDS(\"data_files/pkfit0.RDS\")\n#parfinal &lt;- pkfitfinal$obj$env$parList()\n#pkinput0 &lt;- readRDS('data_files/pkinput0.RDS')\n#fimsdat &lt;- pkdat0 &lt;- pkinput0$dat\n#pkinput &lt;- readRDS('data_files/pkinput.RDS')\n\n\nHow I simplified my assessment: * Haven’t got there yet…",
    "crumbs": [
      "AFSC BSAI Atka Mackerel case study"
    ]
  },
  {
    "objectID": "content/AFSC-BSAI-AtkaMackerel.html#script-that-sets-up-and-runs-the-model",
    "href": "content/AFSC-BSAI-AtkaMackerel.html#script-that-sets-up-and-runs-the-model",
    "title": "AFSC Case Study BSAI Atka mackerel",
    "section": "Script that sets up and runs the model",
    "text": "Script that sets up and runs the model\n\n\nCode\n# clear memory\nclear()\nclear_logs()\nestimate_fish_selex &lt;- TRUE\nestimate_survey_selex &lt;- TRUE\nestimate_q2 &lt;- TRUE\nestimate_q3 &lt;- TRUE\nestimate_q6 &lt;- TRUE\nestimate_F &lt;- TRUE\nestimate_recdevs &lt;- TRUE\n\nget_amak_data &lt;- function(rdat,rrep){\n  ## put into fims friendly form\n  res &lt;- data.frame(type = character(),\n                    name = character(),\n                    age = integer(),\n                    datestart = character(),\n                    dateend = character(),\n                    value = double(),\n                    unit = character(),\n                    uncertainty = double())\n  landings &lt;- data.frame(type = \"landings\",\n                         name = \"fleet1\",\n                         age = NA,\n                         datestart = paste0(seq(rdat$styr, rdat$endyr), \"-01-01\"),\n                         dateend = paste0(seq(rdat$styr, rdat$endyr), \"-12-31\"),\n                         value = as.numeric(rdat$catch),\n                         unit = \"t\",\n                         uncertainty = rdat$catch_cv)\n  ##  need to fill missing years with -999 so it's ignored in FIMS\n  indtmp &lt;- 0*rdat$catch-999\n  indtmp[which(years %in% rdat$yrs_ind )] &lt;- rdat$biom_ind\n  #indtmp\n  CVtmp &lt;- rep(1, length=nyears) # actually SE in log space\n  CVtmp[which(years %in% rdat$yrs_ind)] &lt;- rdat$biom_std/rdat$biom_ind\n  ## repeat with fish catch at age, using expected in missing years\n  #names(atka_rep)\n  caa &lt;- 0*rrep$N[,-1]-999\n  caa[which(years %in% rdat$yrs_ages_fsh), ] &lt;- rdat$page_fsh\n  Ncaa &lt;- rep(1, nyears)\n  Ncaa[which(years %in% rdat$yrs_ages_fsh)] &lt;- rdat$sample_ages_fsh\n  paa2 &lt;-  0*rrep$N[,-1]-999\n  paa2[which(years %in% rdat$yrs_ages_ind), ] &lt;- rdat$page_ind\n  Npaa2 &lt;- rep(1, nyears)\n  Npaa2[which(years %in% rdat$yrs_ages_ind)] &lt;- rdat$sample_ages_ind\n  index &lt;- data.frame(type = \"index\",\n                      name = \"survey\",\n                      age = NA,\n                      datestart = paste0(seq(rdat$styr, rdat$endyr), \"-01-01\"),\n                      dateend = paste0(seq(rdat$styr, rdat$endyr), \"-12-31\"),\n                      value = ifelse(indtmp&gt;0, indtmp, indtmp),\n                      unit = \"\",\n                      uncertainty = CVtmp)\n  ## these have -999 for missing data years\n  catchage &lt;- data.frame(type = \"age\",\n                         name = \"fleet1\",\n                         age = rep(seq(1,nages), nyears),\n                         datestart = rep(paste0(seq(rdat$styr, rdat$endyr), \"-01-01\"), each=nages),\n                         dateend = rep(paste0(seq(rdat$styr, rdat$endyr), \"-12-31\"), each=nages),\n                         value = as.numeric(t(caa)),\n                         unit = \"\",\n                         uncertainty = rep(Ncaa, each=nages))\n  indexage &lt;- data.frame(\n    type = \"age\",\n    name = \"survey\",\n    age = rep(seq(1, nages), nyears),\n    datestart = rep(paste0( seq(rdat$styr, rdat$endyr), \"-01-01\" ), each = nages),\n    dateend = rep(paste0( seq(rdat$styr, rdat$endyr), \"-12-31\" ), each = nages),\n    value = as.numeric(t(paa2)),\n    unit = \"\",\n    uncertainty = rep(Npaa2, each = nages)\n  )\n  ## indexage=indexage2\n  ## index=index2\n  res &lt;- rbind(res, landings, index, catchage, indexage)\n  return(res)\n}\nfimsdat&lt;-get_amak_data(atka_dat,atka_rep)\n\n\n\n\nCode\nage_frame &lt;- FIMS::FIMSFrame(fimsdat)\nfishery_catch &lt;- FIMS::m_landings(age_frame)\nfishery_agecomp &lt;- FIMS::m_agecomp(age_frame, \"fleet1\")\nsurvey_index &lt;- FIMS::m_index(age_frame, \"survey\")\nsurvey_agecomp &lt;- FIMS::m_agecomp(age_frame, \"survey\")\n# need to think about how to deal with multiple fleets - only using 1 fleeet for now\nfish_index &lt;- methods::new(Index, nyears)\nfish_age_comp &lt;- methods::new(AgeComp, nyears, nages)\nfish_index$index_data &lt;- fishery_catch\nfish_age_comp$age_comp_data &lt;- fishery_agecomp * fimsdat$catchage$uncertainty#rep(Ncaa, each=nages)",
    "crumbs": [
      "AFSC BSAI Atka Mackerel case study"
    ]
  },
  {
    "objectID": "content/case-study-template.html",
    "href": "content/case-study-template.html",
    "title": "Customize",
    "section": "",
    "text": "Each page should start with\n---\ntitle: your title\n---\nand the first header will be the 2nd level, so ##. Note, there are situations where you leave off\n---\ntitle: your title\n---\nand start the qmd file with a level header #, but if using the default title yaml (in the --- fence) is a good habit since it makes it easy for Quarto convert your qmd file to other formats (like into a presentation).",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#edit-and-add-your-pages",
    "href": "content/case-study-template.html#edit-and-add-your-pages",
    "title": "Customize",
    "section": "",
    "text": "Each page should start with\n---\ntitle: your title\n---\nand the first header will be the 2nd level, so ##. Note, there are situations where you leave off\n---\ntitle: your title\n---\nand start the qmd file with a level header #, but if using the default title yaml (in the --- fence) is a good habit since it makes it easy for Quarto convert your qmd file to other formats (like into a presentation).",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#add-a-chunk-of-code-describing-your-setup",
    "href": "content/case-study-template.html#add-a-chunk-of-code-describing-your-setup",
    "title": "Customize",
    "section": "Add a chunk of code describing your setup",
    "text": "Add a chunk of code describing your setup\nCase study files should include:\n\nR version\nTMB version\nFIMS commit\nName of your stock\nName of your region\nName of the analyst\n\nPlease ensure that the content/setup.qmd file is updated if the case study requires the installation of additional R packages.",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#add-a-bulleted-list-and-script-describing-simplifications-you-had-to-make",
    "href": "content/case-study-template.html#add-a-bulleted-list-and-script-describing-simplifications-you-had-to-make",
    "title": "Customize",
    "section": "Add a bulleted list and script describing simplifications you had to make",
    "text": "Add a bulleted list and script describing simplifications you had to make\nHow I simplified my assessment * Remove seasonality * etc.",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#add-your-script-that-sets-up-and-runs-the-model",
    "href": "content/case-study-template.html#add-your-script-that-sets-up-and-runs-the-model",
    "title": "Customize",
    "section": "Add your script that sets up and runs the model",
    "text": "Add your script that sets up and runs the model",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#add-your-comparison-figures",
    "href": "content/case-study-template.html#add-your-comparison-figures",
    "title": "Customize",
    "section": "Add your comparison figures",
    "text": "Add your comparison figures",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#add-comparison-tables",
    "href": "content/case-study-template.html#add-comparison-tables",
    "title": "Customize",
    "section": "Add comparison tables",
    "text": "Add comparison tables",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "href": "content/case-study-template.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "title": "Customize",
    "section": "What was your experience using FIMS? What could we do to improve usability?",
    "text": "What was your experience using FIMS? What could we do to improve usability?",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#list-any-issues-that-you-ran-into-or-found",
    "href": "content/case-study-template.html#list-any-issues-that-you-ran-into-or-found",
    "title": "Customize",
    "section": "List any issues that you ran into or found",
    "text": "List any issues that you ran into or found\nPlease open an issue if you found something new.",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "href": "content/case-study-template.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "title": "Customize",
    "section": "What features are most important to add based on this case study?",
    "text": "What features are most important to add based on this case study?",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/case-study-template.html#add-your-pages-to-the-project",
    "href": "content/case-study-template.html#add-your-pages-to-the-project",
    "title": "Customize",
    "section": "Add your pages to the project",
    "text": "Add your pages to the project\n\nAdd the files to _quarto.yml",
    "crumbs": [
      "Case study template"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html",
    "href": "content/NWFSC-petrale.html",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\ntheme_set(theme_bw())\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: West Coast Petrale Sole\n\nRegion: NWFSC\n\nAnalyst: Ian G. Taylor",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html#the-setup",
    "href": "content/NWFSC-petrale.html#the-setup",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\ntheme_set(theme_bw())\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: West Coast Petrale Sole\n\nRegion: NWFSC\n\nAnalyst: Ian G. Taylor",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html#simplifications-to-the-original-assessment",
    "href": "content/NWFSC-petrale.html#simplifications-to-the-original-assessment",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "Simplifications to the original assessment",
    "text": "Simplifications to the original assessment\nThe operational petrale sole stock assessment used Stock Synthesis (SS3) and included numerous data types and population dynamic assumptions that are not yet available in FIMS. A simplified SS3 model was also developed to provide a closer comparison but is still a work in progress. This is intended as a demonstration and nothing more.\nFor both the FIMS model and the simplified SS3 model, I made the following changes:\n\nRemove data\n\nRemove lengths\nRemove male ages\nRemove discard fractions and discard comps\n\nSimplify selectivity\n\nRemove length-based retention functions\nConvert to age-based logistic (from length-based double-normal, fixed asymptotic)\n\nRemove parameter priors (on M and h)\nUse female mean weight at age as calculated from the parametric growth curves\nVarying Index CV to constant over time\nVarying Catch ESS to constant over time",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html#script-to-prepare-data-for-building-fims-object",
    "href": "content/NWFSC-petrale.html#script-to-prepare-data-for-building-fims-object",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "Script to prepare data for building FIMS object",
    "text": "Script to prepare data for building FIMS object\n\n\nCode\n# read SS3 input files from petrale sole assessment on github\npetrale_input &lt;- r4ss::SS_read(\"https://raw.githubusercontent.com/pfmc-assessments/petrale/main/models/2023.a034.001/\")\n\n# # reading SS3 output doesn't work from github, so just using hard-wired values from model output\n# petrale_output &lt;- r4ss::SS_output(\"https://raw.githubusercontent.com/pfmc-assessments/petrale/main/models/2023.a034.001/\")\n\n# generic names for SS3 data and control files could be useful in future generalized version of this code\nss3dat &lt;- petrale_input$dat\nss3ctl &lt;- petrale_input$ctl\n\n# define the dimensions\nyears &lt;- seq(ss3dat$styr, ss3dat$endyr)\nnyears &lt;- length(years)\nnseasons &lt;- 1\n# ages &lt;- 0:ss3dat$Nages # population ages in SS3, starts at age 0\nages &lt;- 1:17 # same as data bins\nnages &lt;- length(ages)\n\n# source function to simplify data and convert from SS3 format\nsource(\"R/get_ss3_data.R\")\n\n# fleet 4 used conditional age-at-length data with marginal observations\n# entered as fleet == -4 (to exclude from likelihood due to redundancy)\n# using only marginals for FIMS and exclude CAAL data by filtering out\n# the fleet 4 age data\n# similarly, some early ages were excluded from fleet 1 in the original model\n# by assigning to fleet -1, these get filtered by get_ss3_data()\n\n# only include age comps with fleet = -4 or 1:\nss3dat$agecomp &lt;- ss3dat$agecomp |&gt; dplyr::filter(FltSvy %in% c(-4, 1))\nss3dat$agecomp$FltSvy &lt;- abs(ss3dat$agecomp$FltSvy)\n\n# convert SS3 data into FIMS format using function defined in the R directory\nmydat &lt;- get_ss3_data(ss3dat, fleets = c(1,4), ages = ages)\n\n# rename fleet4 as fleet2 (fleets 2 and 3 already removed above)\nmydat &lt;- mydat |&gt;\n  dplyr::mutate(name = dplyr::case_when(\n    name == \"fleet1\" ~ name,\n    name == \"fleet4\" ~ \"fleet2\" # change fleet4 to fleet2\n  ))",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html#setup-fims-model",
    "href": "content/NWFSC-petrale.html#setup-fims-model",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "Setup FIMS model",
    "text": "Setup FIMS model\n\n\nCode\n## set up FIMS data objects\nclear()\nclear_logs()\n\n# I don't know what these commands are doing\nage_frame &lt;- FIMS::FIMSFrame(mydat) \nfishery_catch &lt;- FIMS::m_landings(age_frame) # filtering for the landings only\nfishery_agecomp &lt;- FIMS::m_agecomp(age_frame, \"fleet1\") # filtering for ages from fleet 1\nsurvey_index &lt;- FIMS::m_index(age_frame, \"fleet2\") # filtering for index data from fleet 2\nsurvey_agecomp &lt;- FIMS::m_agecomp(age_frame, \"fleet2\") # filtering for ages from fleet 2\n\nfish_index &lt;- methods::new(Index, nyears)\nfish_index$index_data &lt;- fishery_catch\nfish_age_comp &lt;- methods::new(AgeComp, nyears, nages)\n# Q: I'm confused about FIMSFrame being set up with age comps in proportions\n#   vs here needing age comps in numbers\n# A: It's just not sorted out in FIMS yet, in the future this could be made simpler\nfish_age_comp$age_comp_data &lt;- age_frame@data |&gt;\n  dplyr::filter(type == \"age\" & name == \"fleet1\") |&gt;\n  dplyr::mutate(n = value * uncertainty) |&gt;\n  dplyr::pull(n) |&gt;\n  round(1)\n\n\n# switches to turn on or off estimation\nestimate_fish_selex &lt;- TRUE\nestimate_survey_selex &lt;- TRUE\nestimate_q &lt;- TRUE\nestimate_F &lt;- TRUE\nestimate_recdevs &lt;- TRUE\nestimate_init_naa &lt;- FALSE\nestimate_log_rzero &lt;- TRUE\n\n### set up fishery\n## methods::show(DoubleLogisticSelectivity)\nfish_selex &lt;- methods::new(LogisticSelectivity)\n\n# SS3 model had length-based selectivity which leads to sex-specific\n# age-based selectivity due to sexually-dimorphic growth.\n# I didn't bother to calculate an age-based inflection point averaged over sexes\nfish_selex$inflection_point$value &lt;- 10\nfish_selex$inflection_point$is_random_effect &lt;- FALSE\nfish_selex$inflection_point$estimated &lt;- estimate_fish_selex\nfish_selex$slope$value &lt;- 2\nfish_selex$slope$is_random_effect &lt;- FALSE\nfish_selex$slope$estimated &lt;- estimate_fish_selex\n\n## create fleet object for fishing fleet\nfish_fleet &lt;- methods::new(Fleet)\nfish_fleet$nages &lt;- nages\nfish_fleet$nyears &lt;- nyears\nfish_fleet$log_Fmort &lt;- log(rep(0.00001, nyears))\nfish_fleet$estimate_F &lt;- estimate_F\nfish_fleet$random_F &lt;- FALSE\nfish_fleet$log_q &lt;- 0\nfish_fleet$estimate_q &lt;- estimate_q\nfish_fleet$random_q &lt;- FALSE\nfish_fleet$log_obs_error &lt;- rep(log(sqrt(log(0.01^2 + 1))), nyears)\n\n# Set Index, AgeComp, and Selectivity using the IDs from the modules defined above\nfish_fleet$SetAgeCompLikelihood(1)\nfish_fleet$SetIndexLikelihood(1)\nfish_fleet$SetObservedIndexData(fish_index$get_id())\nfish_fleet$SetObservedAgeCompData(fish_age_comp$get_id())\nfish_fleet$SetSelectivity(fish_selex$get_id())\n\n## Setup survey\nsurvey_fleet_index &lt;- methods::new(Index, nyears)\nsurvey_age_comp &lt;- methods::new(AgeComp, nyears, nages)\nsurvey_fleet_index$index_data &lt;- survey_index\nsurvey_age_comp$age_comp_data &lt;- mydat |&gt;\n  dplyr::filter(type == \"age\" & name == \"fleet2\") |&gt;\n  dplyr::mutate(n = value * uncertainty) |&gt;\n  dplyr::pull(n)\n\n## survey selectivity: ascending logistic\n## methods::show(DoubleLogisticSelectivity)\nsurvey_selex &lt;- new(LogisticSelectivity)\nsurvey_selex$inflection_point$value &lt;- 6\nsurvey_selex$inflection_point$is_random_effect &lt;- FALSE\nsurvey_selex$inflection_point$estimated &lt;- estimate_survey_selex\nsurvey_selex$slope$value &lt;- 2\nsurvey_selex$slope$is_random_effect &lt;- FALSE\nsurvey_selex$slope$estimated &lt;- estimate_survey_selex\n\n## create fleet object for survey\nsurvey_fleet &lt;- methods::new(Fleet)\nsurvey_fleet$is_survey &lt;- TRUE\nsurvey_fleet$nages &lt;- nages\nsurvey_fleet$nyears &lt;- nyears\nsurvey_fleet$estimate_F &lt;- FALSE\nsurvey_fleet$random_F &lt;- FALSE\nsurvey_fleet$log_q &lt;- 1.4 # petrale sole catchability estimated ~4.0 = exp(1.4)\nsurvey_fleet$estimate_q &lt;- estimate_q\nsurvey_fleet$random_q &lt;- FALSE\n# Q: why can't the index uncertainty come from FIMSFrame?\nsurvey_fleet$log_obs_error &lt;- age_frame@data |&gt;\n  dplyr::filter(type == \"index\" & name == \"fleet2\") |&gt;\n  dplyr::pull(uncertainty) |&gt;\n  log()\n\nsurvey_fleet$SetAgeCompLikelihood(1)\nsurvey_fleet$SetIndexLikelihood(1)\nsurvey_fleet$SetSelectivity(survey_selex$get_id())\nsurvey_fleet$SetObservedIndexData(survey_fleet_index$get_id())\nsurvey_fleet$SetObservedAgeCompData(survey_age_comp$get_id())\n\n# Population module\n\n# recruitment\nrecruitment &lt;- methods::new(BevertonHoltRecruitment)\n# methods::show(BevertonHoltRecruitment)\n\n# petrale sigmaR is 0.5\nrecruitment$log_sigma_recruit$value &lt;- log(ss3ctl$SR_parms[\"SR_sigmaR\", \"INIT\"])\n# petrale log(R0) is around 9.6 (where R0 is in thousands)\nrecruitment$log_rzero$value &lt;- ss3ctl$SR_parms[\"SR_LN(R0)\", \"INIT\"]\n# Q: do we need to account for SS3 R0 in thousands?\n# A: formula below is thanks to Bai Li\n#    in https://github.com/NOAA-FIMS/case-studies/commit/d7c0d645a18766d030f632e5818d91764e2297ef\n# but did not produce good results (perhaps due to some other issue) \n# recruitment$log_rzero$value &lt;- log(exp(ss3ctl$SR_parms[\"SR_LN(R0)\", \"INIT\"])*1000)\nrecruitment$log_rzero$is_random_effect &lt;- FALSE\nrecruitment$log_rzero$estimated &lt;- estimate_log_rzero\n# petrale steepness is fixed at 0.8\nsteep &lt;- ss3ctl$SR_parms[\"SR_BH_steep\", \"INIT\"]\nrecruitment$logit_steep$value &lt;- -log(1.0 - steep) + log(steep - 0.2)\nrecruitment$logit_steep$is_random_effect &lt;- FALSE\nrecruitment$logit_steep$estimated &lt;- FALSE\n\nrecruitment$estimate_log_devs &lt;- estimate_recdevs\n# Q: why are parameters \"log_devs\" when output is \"report$log_recruit_dev\"?\n# and are they multipliers, not deviations from zero?\n# needed to change from 1 to 0 to get stable population\nrecruitment$log_devs &lt;- rep(0, nyears) # set to no deviations (multiplier) to start\n\n# growth\newaa_growth &lt;- methods::new(EWAAgrowth)\newaa_growth$ages &lt;- ages\n# NOTE: getting weight-at-age vector from\n# petrale_output$wtatage |&gt;\n#   dplyr::filter(Sex == 1 & Fleet == -1 & Yr == 1876) |&gt;\n#   dplyr::select(paste(0:40)) |&gt;\n#   round(4)\newaa_growth$weights &lt;- c(\n  # 0.0010,  # age 0\n  0.0148, 0.0617, 0.1449, 0.2570, 0.3876, 0.5260, 0.6640, 0.7957, 0.9175,\n  1.0273, 1.1247, 1.2097, 1.2831, 1.3460, 1.3994, 1.4446, 1.4821\n)\n\n# maturity\nmaturity &lt;- new(LogisticMaturity)\n# approximate age-based equivalent to length-based maturity in petrale model\n# based on looking at model$endgrowth |&gt; dplyr::filter(Sex == 1) |&gt; dplyr::select(Age_Beg, Len_Mat)\nmaturity$inflection_point$value &lt;- 6.5\nmaturity$inflection_point$is_random_effect &lt;- FALSE\nmaturity$inflection_point$estimated &lt;- FALSE\nmaturity$slope$value &lt;- 2 # arbitrary guess\nmaturity$slope$is_random_effect &lt;- FALSE\nmaturity$slope$estimated &lt;- FALSE\n\n# population\npopulation &lt;- new(Population)\n# petrale natural mortality is estimated around 0.14\nM_value &lt;- ss3ctl$MG_parms[\"NatM_p_1_Fem_GP_1\", \"INIT\"]\npopulation$log_M &lt;- rep(log(M_value), nages * nyears)\npopulation$estimate_M &lt;- FALSE\n# initial numbers at age based on R0 + mortality\ninit_naa &lt;- exp(recruitment$log_rzero$value) * exp(-(ages - 1) * M_value)\ninit_naa[nages] &lt;- init_naa[nages] / M_value # sum of infinite series\npopulation$log_init_naa &lt;- log(init_naa)\npopulation$estimate_init_naa &lt;- estimate_init_naa\npopulation$nages &lt;- nages\npopulation$ages &lt;- ages\npopulation$nfleets &lt;- 2 # fleets plus surveys\npopulation$nseasons &lt;- nseasons\npopulation$nyears &lt;- nyears\n# population$proportion_female &lt;- rep(0.5, nages)\n\npopulation$SetMaturity(maturity$get_id())\npopulation$SetGrowth(ewaa_growth$get_id())\npopulation$SetRecruitment(recruitment$get_id())",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html#run-fims-model",
    "href": "content/NWFSC-petrale.html#run-fims-model",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "Run FIMS model",
    "text": "Run FIMS model\n\n\nCode\n# make FIMS model\nsuccess &lt;- CreateTMBModel()\nparameters &lt;- list(p = get_fixed())\nobj &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent = TRUE)\nopt &lt;- nlminb(obj$par, obj$fn, obj$gr,\n  control = list(eval.max = 10000, iter.max = 10000)\n)\nprint(opt)\n# sdr &lt;- TMB::sdreport(obj)\n# sdr_fixed &lt;- summary(sdr, \"fixed\")\n# print(sdr_fixed)",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html#get-fims-output-and-plot-results",
    "href": "content/NWFSC-petrale.html#get-fims-output-and-plot-results",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "Get FIMS output and plot results",
    "text": "Get FIMS output and plot results\n\n\nCode\nreport &lt;- obj$report()\n# copy input data to use as basis for results\nresults_frame &lt;- age_frame@data\nresults_frame$expected &lt;- NA\n# convert date string to numeric year\nresults_frame &lt;- results_frame |&gt;\n  dplyr::mutate(year = lubridate::as_date(datestart) |&gt; lubridate::year())\n# add expected index to data frame\nresults_frame$expected[results_frame$type == \"index\" & results_frame$name == \"fleet2\"] &lt;-\n  report$exp_index[[2]]\n# add estimated catch to data frame\nresults_frame$expected[results_frame$type == \"landings\" & results_frame$name == \"fleet1\"] &lt;-\n  report$exp_catch[[1]]\n# add estimated age comps to data frame\nfor (fleet in 1:2) {\n  # copy Cole's approach to rescaling expected comps to proportions\n  x1 &lt;- matrix(report$cnaa[[fleet]], ncol = nages, byrow = TRUE)\n  x1 &lt;- x1 / rowSums(x1)\n  dimnames(x1) &lt;- list(year = years, age = ages)\n  x1 &lt;- reshape2::melt(x1, value.name = \"paa\") |&gt;\n    dplyr::mutate(type = \"age\", name = paste0(\"fleet\", fleet))\n  # add expected proportions into results_frame\n  results_frame &lt;-\n    # add paa for age comps (will be NA for all other types)\n    dplyr::left_join(x = results_frame, y = x1) |&gt;\n    # replace value column with paa for age data within this fleet (when not NA)\n    dplyr::mutate(expected = dplyr::case_when(is.na(paa) ~ expected, TRUE ~ paa)) |&gt;\n    dplyr::select(-paa) # remove temporary paa column\n}\n\n# plot catch fit\nresults_frame |&gt;\n  dplyr::filter(type == \"landings\" & value != -999) |&gt;\n  ggplot(aes(x = year, y = value)) +\n  geom_point() +\n  xlab(\"Year\") +\n  ylab(\"Catch (mt)\") +\n  geom_line(aes(x = year, y = expected), color = \"blue\") +\n  theme_bw()\n\n\nCode\nggsave(\"figures/NWFSC-petrale_fit_catch.png\")\n\n# plot index fit\nresults_frame |&gt;\n  dplyr::filter(type == \"index\" & value != -999) |&gt;\n  ggplot(aes(x = year, y = value)) +\n  geom_point() +\n  xlab(\"Year\") +\n  ylab(\"Index\") +\n  geom_line(aes(x = year, y = expected), color = \"blue\") +\n  theme_bw()\n\n\nCode\nggsave(\"figures/NWFSC-petrale_fit_index.png\")\n\n# plot age comp fits\n# age comps for fleet 1\nresults_frame |&gt;\n  dplyr::filter(type == \"age\" & name == \"fleet1\" & value != -999) |&gt;\n  ggplot(aes(x = age, y = value)) +\n  # note: dir = \"v\" sets vertical direction to fill the facets which\n  # makes comparison of progression of cohorts easier to see\n  facet_wrap(vars(year), dir = \"v\") +\n  geom_point() +\n  xlab(\"Age\") +\n  ylab(\"Proportion\") +\n  geom_line(aes(x = age, y = expected), color = \"blue\") +\n  theme_bw()\n\n\nCode\nggsave(\"figures/NWFSC-petrale_fit_comps_fleet1.png\")\n# age comps for fleet 2\nresults_frame |&gt;\n  dplyr::filter(type == \"age\" & name == \"fleet2\" & value != -999) |&gt;\n  ggplot(aes(x = age, y = value)) +\n  # note: dir = \"v\" sets vertical direction to fill the facets which\n  # makes comparison of progression of cohorts easier to see\n  facet_wrap(vars(year), dir = \"v\") +\n  geom_point() +\n  xlab(\"Age\") +\n  ylab(\"Proportion\") +\n  geom_line(aes(x = age, y = expected), color = \"blue\") +\n  theme_bw()\n\n\nCode\nggsave(\"figures/NWFSC-petrale_fit_comps_fleet2.png\")\n\n# assemble time series output\ntimeseries &lt;- rbind(\n  data.frame(\n    year = c(years, max(years) + 1),\n    type = \"ssb\",\n    value = report$ssb[[1]]\n  ),\n  data.frame(\n    year = c(years, max(years) + 1),\n    type = \"biomass\",\n    value = report$biomass[[1]]\n  ),\n  data.frame(\n    year = c(years),\n    type = \"recruitment\",\n    value = report$recruitment[[1]][1:nyears] # final value was 0\n  ),\n  data.frame(\n    year = c(years),\n    type = \"F_mort\",\n    value = report$F_mort[[1]]\n  )\n)\n# plot time series of 4 quantities\ntimeseries |&gt;\n  ggplot(aes(x = year, y = value)) +\n  facet_wrap(vars(type), scales = \"free\") +\n  geom_line() +\n  expand_limits(y = 0) +\n  theme_bw()\n\n\nCode\nggsave(\"figures/NWFSC-petrale_time_series.png\")",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html#compare-results-to-ss3-models-still-a-work-in-progress",
    "href": "content/NWFSC-petrale.html#compare-results-to-ss3-models-still-a-work-in-progress",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "Compare results to SS3 models (still a work in progress)",
    "text": "Compare results to SS3 models (still a work in progress)\n\n\nCode\n# load saved time series\ntimeseries_compare &lt;- readRDS(\"data_files/NWFSC-petrale-SS3-timeseries.rds\")\n# add FIMS output to time series table\ntimeseries_compare &lt;- timeseries |&gt;\n  dplyr::mutate(platform = \"FIMS\") |&gt;\n  rbind(timeseries_compare)\n# make plot comparing time series\ntimeseries_compare |&gt;\n  ggplot(aes(year, value, color = platform)) +\n  geom_line() +\n  facet_wrap(\"type\", scales = \"free\") +\n  ylim(0, NA) +\n  labs(x = NULL, y = NULL) +\n  theme_bw()\n\n\nCode\nggsave(\"figures/NWFSC-petrale_timeseries_comparison.png\")\n# numbers at age as a matrix\nnaa &lt;- matrix(report$naa[[1]], ncol = nages, byrow = TRUE)\n# numbers at age as a long data frame\nnaa_df &lt;- tidyr::expand_grid(year = c(years, max(years) + 1), age = ages) |&gt;\n  data.frame(naa = report$naa[[1]])\n# bubble plot of numbers at age\nnaa_df |&gt;\n  ggplot(aes(x = year, y = age, size = naa)) +\n  geom_point(alpha = 0.2) +\n  theme_bw()\n\n\nCode\nggsave(\"figures/NWFSC-petrale_numbers_at_age.png\")\nclear()\n# end \"if (FALSE)\" block to only run if model is working",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/NWFSC-petrale.html#plots",
    "href": "content/NWFSC-petrale.html#plots",
    "title": "NWFSC Case Study Petrale Sole",
    "section": "Plots",
    "text": "Plots\n\nCatch fit\n ### Index fit  ### Age comp fits   ### Time series comparisons with SS3 model",
    "crumbs": [
      "NWFSC petrale case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html",
    "href": "content/PIFS-opakapaka.html",
    "title": "PIFSC Opakapaka Case Study",
    "section": "",
    "text": "R version = R_version\nTMB version = TMB_version\nFIMS commit = FIMS_commit\nStock name: Main Hawaiian Islands Opakapaka\nRegion: Pacific Islands\nAnalyst: Meg Oshima",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#the-setup",
    "href": "content/PIFS-opakapaka.html#the-setup",
    "title": "PIFSC Opakapaka Case Study",
    "section": "",
    "text": "R version = R_version\nTMB version = TMB_version\nFIMS commit = FIMS_commit\nStock name: Main Hawaiian Islands Opakapaka\nRegion: Pacific Islands\nAnalyst: Meg Oshima",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#simplifications-made-to-the-model",
    "href": "content/PIFS-opakapaka.html#simplifications-made-to-the-model",
    "title": "PIFSC Opakapaka Case Study",
    "section": "Simplifications made to the model",
    "text": "Simplifications made to the model\nOpakapaka is one of seven species managed as a complex using a surplus production model (JABBA), however, as a supplement to the stock assessment, we developed a single-species SS3 model for Opaka. However, this model lacked age composition data (necessary for FIMS), so I used a model generated with {ss3sim} that is based on Opaka life-history, mimics the fleets and years of data available, and is conditioned on estimated fishing mortality from the Opaka SS3 model developed for the assessment report. This allowed us to simulate age composition data for the fishery and survey instead of converting length and weight composition data into age compositions. Some differences between the ss3sim model and the full SS3 model include:\n\nRemoved growth platoons\nSimplified to 2 fleets, one fishery and one survey, instead of 2 fishing and 2 survey fleets. One reason is because the second survey fleet has a dome-shaped selectivity.\nAll age composition was simulated, currently we collect weight composition data from the commercial fishery and length data from the survey.\nInitial depletion estimation was removed.",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#script-that-sets-up-and-runs-the-model",
    "href": "content/PIFS-opakapaka.html#script-that-sets-up-and-runs-the-model",
    "title": "PIFSC Opakapaka Case Study",
    "section": "Script that sets up and runs the model",
    "text": "Script that sets up and runs the model\nNote: for more complete code, see “./content/PIFSC-opakapaka.r”.",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#run-fims-model",
    "href": "content/PIFS-opakapaka.html#run-fims-model",
    "title": "PIFSC Opakapaka Case Study",
    "section": "Run FIMS Model",
    "text": "Run FIMS Model\n\n\nCode\nsuccess &lt;- CreateTMBModel()\nparameters &lt;- list(p = get_fixed())\nobj &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent = TRUE)\nopt &lt;- nlminb(obj$par, obj$fn, obj$gr, control = list(eval.max = 10000, iter.max = 10000))\n#print(opt)\nreport &lt;- obj$report()",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#results-from-fims-model",
    "href": "content/PIFS-opakapaka.html#results-from-fims-model",
    "title": "PIFSC Opakapaka Case Study",
    "section": "Results from FIMS model",
    "text": "Results from FIMS model\n\n\nCode\n# copy input data to use as basis for results\nresults_frame &lt;- age_frame@data\nresults_frame$expected &lt;- NA\n# convert date string to numeric year\n# I'm doing this differently bc my years are 1-75 not the typical year\nresults_frame &lt;- results_frame |&gt;\ntidyr::separate(col = datestart, into = c(\"year\", \"temp1\", \"temp2\"), sep = \"-\", remove = FALSE) |&gt; \ndplyr::select(-c(temp1, temp2))  |&gt; \ndplyr::mutate(year = as.integer(year))\n\n# add expected index to data frame\nresults_frame$expected[results_frame$type == \"index\" & results_frame$name == \"fleet2\"] &lt;-\n  report$exp_index[[2]]\n\n# add estimated catch to data frame\nresults_frame$expected[results_frame$type == \"landings\" & results_frame$name == \"fleet1\"] &lt;-\n  report$exp_catch[[1]]\n\n# add estimated age comps to data frame\nfor (fleet in 1:2) {\n  # copy Cole's approach to rescaling expected comps to proportions\n  x1 &lt;- matrix(report$cnaa[[fleet]], ncol = nages, byrow = TRUE)\n  x1 &lt;- x1 / rowSums(x1)\n  dimnames(x1) &lt;- list(year = years, age = ages)\n  x1 &lt;- reshape2::melt(x1, value.name = \"paa\") |&gt;\n    dplyr::mutate(type = \"age\", name = paste0(\"fleet\", fleet))\n  # add expected proportions into results_frame\n  results_frame &lt;-\n    # add paa for age comps (will be NA for all other types)\n    dplyr::left_join(x = results_frame, y = x1) |&gt; \n    # replace value column with paa for age data within this fleet (when not NA)\n    dplyr::mutate(expected = dplyr::case_when(is.na(paa) ~ expected, TRUE ~ paa)) |&gt; \n    dplyr::select(-paa) # remove temporary paa column\n}\n\n\nJoining with `by = join_by(type, name, age, year)`\nJoining with `by = join_by(type, name, age, year)`\n\n\n\nCatch fit\n\n\nCode\n  results_frame |&gt;\n    dplyr::filter(type == \"landings\" & value != -999) |&gt;\n    ggplot(aes(x = year, y = value)) +\n    geom_point() +\n    xlab(\"Year\") +\n    ylab(\"Catch (mt)\") +\n    geom_line(aes(x = year, y = expected), color = \"blue\") +\n    theme_bw()\n\n\n\n\n\n\n\n\n\n\n\nIndex fit\n\n\nCode\n  results_frame |&gt;\n    dplyr::filter(type == \"index\" & value != -999 & !is.na(expected)) |&gt;\n    ggplot(aes(x = year, y = value)) +\n    geom_point() +\n    xlab(\"Year\") +\n    ylab(\"Index\") +\n    geom_line(aes(x = year, y = expected), color = \"blue\") +\n    theme_bw()\n\n\n\n\n\n\n\n\n\n\n\nAge comp fits\n\n\nCode\n  # fleet 1\n  results_frame |&gt;\n    dplyr::filter(type == \"age\" & name == \"fleet1\" & value != -999) |&gt;\n    ggplot(aes(x = age, y = value)) +\n    # note: dir = \"v\" sets vertical direction to fill the facets which\n    # makes comparison of progression of cohorts easier to see\n    facet_wrap(vars(year), dir = \"v\") +\n    geom_point() +\n    geom_line(aes(x = age, y = expected), color = \"blue\") +\n    theme_bw() +\n    labs(x = \"Age\", y = \"Proportion\", title = \"Fleet 1\")\n\n\n\n\n\n\n\n\n\nCode\n# fleet 2\n  results_frame |&gt;\n    dplyr::filter(type == \"age\" & name == \"fleet2\" & value != -999) |&gt;\n    ggplot(aes(x = age, y = value)) +\n    # note: dir = \"v\" sets vertical direction to fill the facets which\n    # makes comparison of progression of cohorts easier to see\n    facet_wrap(vars(year), dir = \"v\") +\n    geom_point() +\n    geom_line(aes(x = age, y = expected), color = \"blue\") +\n    theme_bw() +\n    labs(x = \"Age\", y = \"Proportion\", title = \"Fleet 2\")\n\n\n\n\n\n\n\n\n\n\n\nFIMS timeseries\n\n\nCode\ntimeseries &lt;- rbind(\n    data.frame(\n      year = c(years, max(years) + 1),\n      type = \"ssb\",\n      value = report$ssb[[1]]\n    ),\n    data.frame(\n      year = c(years, max(years) + 1),\n      type = \"biomass\",\n      value = report$biomass[[1]]\n    ),\n    data.frame(\n      year = c(years),\n      type = \"recruitment\",\n      value = report$recruitment[[1]][1:nyears] # final value was 0\n    ),\n    data.frame(\n      year = c(years),\n      type = \"F_mort\",\n      value = report$F_mort[[1]]\n    )\n  )\n\ntimeseries |&gt;\n    ggplot(aes(x = year, y = value)) +\n    facet_wrap(vars(type), scales = \"free\") +\n    geom_line() +\n    expand_limits(y = 0) +\n    theme_bw()\n\n\n\n\n\n\n\n\n\n\n\nTime series comparisons with SS3 model\n\n\nCode\nget_ss3_timeseries &lt;- function(model, platform = \"ss3\") {\n    timeseries_ss3 &lt;- model$timeseries |&gt;\n      dplyr::filter(Yr %in% timeseries$year) |&gt; # filter for matching years only (no forecast)\n      dplyr::select(Yr, Bio_all, SpawnBio, Recruit_0, \"F:_1\") |&gt; # select quants of interest\n      dplyr::rename( # change to names used with FIMS\n        year = Yr,\n        biomass = Bio_all, ssb = SpawnBio, recruitment = Recruit_0, F_mort = \"F:_1\"\n      ) |&gt;\n      #dplyr::mutate(ssb = 1000 * ssb) |&gt;\n      tidyr::pivot_longer( # convert quantities in separate columns into a single value column\n        cols = -1,\n        names_to = \"type\",\n        values_to = \"value\"\n      ) |&gt;\n      dplyr::arrange(type) |&gt; # sort by type instead of year\n      dplyr::mutate(platform = platform)\n\n    return(timeseries_ss3)\n  }\n\ntimeseries_compare &lt;- get_ss3_timeseries(model = ss3rep, platform = \"ss3\")\ntimeseries_compare &lt;- timeseries |&gt;\n    dplyr::mutate(platform = \"FIMS\") |&gt;\n    rbind(timeseries_compare)\n timeseries_compare |&gt;\n    ggplot(aes(year, value, color = platform)) +\n    geom_line() +\n    facet_wrap(\"type\", scales = \"free\") +\n    ylim(0, NA) +\n    labs(x = NULL, y = NULL) +\n    theme_bw()",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "href": "content/PIFS-opakapaka.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "title": "PIFSC Opakapaka Case Study",
    "section": "What was your experience using FIMS? What could we do to improve usability?",
    "text": "What was your experience using FIMS? What could we do to improve usability?\nDebugging FIMS is tricky. Often the model would crash my R session and then I would have to start over with no idea what caused the problem. More input checking before running the model would help.",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#list-any-issues-that-you-ran-into-or-found",
    "href": "content/PIFS-opakapaka.html#list-any-issues-that-you-ran-into-or-found",
    "title": "PIFSC Opakapaka Case Study",
    "section": "List any issues that you ran into or found",
    "text": "List any issues that you ran into or found",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "href": "content/PIFS-opakapaka.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "title": "PIFSC Opakapaka Case Study",
    "section": "What features are most important to add based on this case study?",
    "text": "What features are most important to add based on this case study?",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/PIFS-opakapaka.html#add-your-pages-to-the-project",
    "href": "content/PIFS-opakapaka.html#add-your-pages-to-the-project",
    "title": "PIFSC Opakapaka Case Study",
    "section": "Add your pages to the project",
    "text": "Add your pages to the project\n\nAdd the files to _quarto.yml",
    "crumbs": [
      "PIFSC Opakapaka case study"
    ]
  },
  {
    "objectID": "content/publishing.html",
    "href": "content/publishing.html",
    "title": "Publishing",
    "section": "",
    "text": "To get your Quarto webpage to show up with the url\nyou have a few steps."
  },
  {
    "objectID": "content/publishing.html#turn-on-github-pages-for-your-repo",
    "href": "content/publishing.html#turn-on-github-pages-for-your-repo",
    "title": "Publishing",
    "section": "Turn on GitHub Pages for your repo",
    "text": "Turn on GitHub Pages for your repo\n\nTurn on GitHub Pages under Settings &gt; Pages . You will set pages to be made from the gh-pages branch and the root directory.\nTurn on GitHub Actions under Settings &gt; Actions &gt; General\n\nThe GitHub Action will automatically recreate your website when you push to GitHub after you do the initial gh-pages set-up"
  },
  {
    "objectID": "content/publishing.html#do-your-first-publish-to-gh-pages",
    "href": "content/publishing.html#do-your-first-publish-to-gh-pages",
    "title": "Publishing",
    "section": "Do your first publish to gh-pages",
    "text": "Do your first publish to gh-pages\nThe first time you publish to gh-pages, you need to do so locally.\n\nOn your local computer, open a terminal window and cd to your repo directory. Here is what that cd command looks like for me. You command will look different because your local repo will be somewhere else on your computer.\n\ncd ~/Documents/GitHub/NOAA-quarto-simple\n\nPublish to the gh-pages. In the terminal type\n\nquarto publish gh-pages\nThis is going to render your webpage and then push the _site contents to the gh-pages branch."
  },
  {
    "objectID": "content/publishing.html#dont-like-using-gh-pages",
    "href": "content/publishing.html#dont-like-using-gh-pages",
    "title": "Publishing",
    "section": "Don’t like using gh-pages?",
    "text": "Don’t like using gh-pages?\nIn some cases, you don’t want your website on the gh-pages branch. For example, if you are creating releases and you want the website pages archived in that release, then you won’t want your website pages on the gh-pages branch.\nHere are the changes you need to make if you to avoid gh-pages branch.\n\nAt the top of _quarto.yml add the following:\n\nproject: \n  type: website\n  output-dir: docs\n\nOn GitHub under Settings &gt; Pages set pages to be made from the main branch and the docs directory.\nMake sure docs is not listed in .gitignore\nPublish the site the first time locally using quarto publish from the terminal\nChange the GitHub Action because you can’t use quarto publish gh-pages. You’ll need to push to the main branch yourself (in the GitHub Action)\n\non:\n  push:\n    branches: main\n\nname: Render and Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    env:\n      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v2 \n        \n      - name: Set up R (needed for Rmd)\n        uses: r-lib/actions/setup-r@v2\n\n      - name: Install packages (needed for Rmd)\n        run: Rscript -e 'install.packages(c(\"rmarkdown\", \"knitr\", \"jsonlite\"))'\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n        with:\n          # To install LaTeX to build PDF book \n          # tinytex: true \n          # uncomment below and fill to pin a version\n          # version: 0.9.600\n      \n      - name: Render Quarto Project\n        uses: quarto-dev/quarto-actions/render@v2\n        with:\n          to: html\n\n      - name: Set up Git\n        run: |\n          git config --local user.email \"actions@github.com\"\n          git config --local user.name \"GitHub Actions\"\n\n      - name: Commit all changes and push\n        run: |\n          git add -A && git commit -m 'Build site' || echo \"No changes to commit\"\n          git push origin || echo \"No changes to commit\""
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html",
    "href": "content/AFSC-GOA-pollock.html",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\n\n\nThe downloaded binary packages are in\n    /var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T//RtmpT4MzTm/downloaded_packages\n\n\nCode\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\n\n\nRcppParallel (NA -&gt; 5.1.7     ) [CRAN]\nnumDeriv     (NA -&gt; 2016.8-1.1) [CRAN]\nps           (NA -&gt; 1.7.6     ) [CRAN]\ndistribut... (NA -&gt; 0.4.0     ) [CRAN]\ntensorA      (NA -&gt; 0.36.2.1  ) [CRAN]\nabind        (NA -&gt; 1.4-5     ) [CRAN]\nbackports    (NA -&gt; 1.5.0     ) [CRAN]\nprocessx     (NA -&gt; 3.8.4     ) [CRAN]\ndesc         (NA -&gt; 1.4.3     ) [CRAN]\ncallr        (NA -&gt; 3.7.6     ) [CRAN]\nposterior    (NA -&gt; 1.5.0     ) [CRAN]\nmatrixStats  (NA -&gt; 1.3.0     ) [CRAN]\ncheckmate    (NA -&gt; 2.3.1     ) [CRAN]\nBH           (NA -&gt; 1.84.0-0  ) [CRAN]\nQuickJSR     (NA -&gt; 1.2.2     ) [CRAN]\npkgbuild     (NA -&gt; 1.4.4     ) [CRAN]\nloo          (NA -&gt; 2.7.0     ) [CRAN]\ngridExtra    (NA -&gt; 2.3       ) [CRAN]\ninline       (NA -&gt; 0.3.19    ) [CRAN]\nStanHeaders  (NA -&gt; 2.32.9    ) [CRAN]\nrstan        (NA -&gt; 2.32.6    ) [CRAN]\ntmbstan      (NA -&gt; 1.0.91    ) [CRAN]\n\nThe downloaded binary packages are in\n    /var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T//RtmpT4MzTm/downloaded_packages\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/private/var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T/RtmpT4MzTm/remotes108b692af5a0/kaskr-TMB_contrib_R-d275e52/TMBhelper/DESCRIPTION’ ... OK\n* preparing ‘TMBhelper’:\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building ‘TMBhelper_1.4.0.tar.gz’\n\n\nCode\nremotes::install_github(\"NOAA-FIMS/FIMS\")\n\n\n\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/private/var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T/RtmpT4MzTm/remotes108b285fa831/NOAA-FIMS-FIMS-f939fc0/DESCRIPTION’ ... OK\n* preparing ‘FIMS’:\n* checking DESCRIPTION meta-information ... OK\n* cleaning src\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building ‘FIMS_0.2.0.0.tar.gz’\n\n\nCode\nremotes::install_github(\"r4ss/r4ss\")\n\n\nsystemfonts (NA -&gt; 1.1.0   ) [CRAN]\nsys         (NA -&gt; 3.4.2   ) [CRAN]\naskpass     (NA -&gt; 1.2.0   ) [CRAN]\nopenssl     (NA -&gt; 2.2.0   ) [CRAN]\ncurl        (NA -&gt; 5.2.1   ) [CRAN]\nparallelly  (NA -&gt; 1.37.1  ) [CRAN]\nlistenv     (NA -&gt; 0.9.1   ) [CRAN]\nglobals     (NA -&gt; 0.16.3  ) [CRAN]\nsvglite     (NA -&gt; 2.1.3   ) [CRAN]\nrstudioapi  (NA -&gt; 0.16.0  ) [CRAN]\nxml2        (NA -&gt; 1.3.6   ) [CRAN]\nini         (NA -&gt; 0.3.1   ) [CRAN]\nhttr2       (NA -&gt; 1.0.1   ) [CRAN]\ngitcreds    (NA -&gt; 0.1.2   ) [CRAN]\nfuture      (NA -&gt; 1.33.2  ) [CRAN]\nkableExtra  (NA -&gt; 1.4.0   ) [CRAN]\ngh          (NA -&gt; 1.4.1   ) [CRAN]\nfurrr       (NA -&gt; 0.3.1   ) [CRAN]\nforcats     (NA -&gt; 1.0.0   ) [CRAN]\ncorpcor     (NA -&gt; 1.6.10  ) [CRAN]\ncoda        (NA -&gt; 0.19-4.1) [CRAN]\n\nThe downloaded binary packages are in\n    /var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T//RtmpT4MzTm/downloaded_packages\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/private/var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T/RtmpT4MzTm/remotes108b5c3a04d6/r4ss-r4ss-b6976cd/DESCRIPTION’ ... OK\n* preparing ‘r4ss’:\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building ‘r4ss_1.49.2.tar.gz’\n\n\nCode\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\ntheme_set(theme_bw())\n\n\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: Gulf of Alaska (GOA) Walleye Pollock\n\nRegion: AFSC\n\nAnalyst: Cole Monnahan",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#the-setup",
    "href": "content/AFSC-GOA-pollock.html#the-setup",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\n\n\nThe downloaded binary packages are in\n    /var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T//RtmpT4MzTm/downloaded_packages\n\n\nCode\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\n\n\nRcppParallel (NA -&gt; 5.1.7     ) [CRAN]\nnumDeriv     (NA -&gt; 2016.8-1.1) [CRAN]\nps           (NA -&gt; 1.7.6     ) [CRAN]\ndistribut... (NA -&gt; 0.4.0     ) [CRAN]\ntensorA      (NA -&gt; 0.36.2.1  ) [CRAN]\nabind        (NA -&gt; 1.4-5     ) [CRAN]\nbackports    (NA -&gt; 1.5.0     ) [CRAN]\nprocessx     (NA -&gt; 3.8.4     ) [CRAN]\ndesc         (NA -&gt; 1.4.3     ) [CRAN]\ncallr        (NA -&gt; 3.7.6     ) [CRAN]\nposterior    (NA -&gt; 1.5.0     ) [CRAN]\nmatrixStats  (NA -&gt; 1.3.0     ) [CRAN]\ncheckmate    (NA -&gt; 2.3.1     ) [CRAN]\nBH           (NA -&gt; 1.84.0-0  ) [CRAN]\nQuickJSR     (NA -&gt; 1.2.2     ) [CRAN]\npkgbuild     (NA -&gt; 1.4.4     ) [CRAN]\nloo          (NA -&gt; 2.7.0     ) [CRAN]\ngridExtra    (NA -&gt; 2.3       ) [CRAN]\ninline       (NA -&gt; 0.3.19    ) [CRAN]\nStanHeaders  (NA -&gt; 2.32.9    ) [CRAN]\nrstan        (NA -&gt; 2.32.6    ) [CRAN]\ntmbstan      (NA -&gt; 1.0.91    ) [CRAN]\n\nThe downloaded binary packages are in\n    /var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T//RtmpT4MzTm/downloaded_packages\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/private/var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T/RtmpT4MzTm/remotes108b692af5a0/kaskr-TMB_contrib_R-d275e52/TMBhelper/DESCRIPTION’ ... OK\n* preparing ‘TMBhelper’:\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building ‘TMBhelper_1.4.0.tar.gz’\n\n\nCode\nremotes::install_github(\"NOAA-FIMS/FIMS\")\n\n\n\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/private/var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T/RtmpT4MzTm/remotes108b285fa831/NOAA-FIMS-FIMS-f939fc0/DESCRIPTION’ ... OK\n* preparing ‘FIMS’:\n* checking DESCRIPTION meta-information ... OK\n* cleaning src\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building ‘FIMS_0.2.0.0.tar.gz’\n\n\nCode\nremotes::install_github(\"r4ss/r4ss\")\n\n\nsystemfonts (NA -&gt; 1.1.0   ) [CRAN]\nsys         (NA -&gt; 3.4.2   ) [CRAN]\naskpass     (NA -&gt; 1.2.0   ) [CRAN]\nopenssl     (NA -&gt; 2.2.0   ) [CRAN]\ncurl        (NA -&gt; 5.2.1   ) [CRAN]\nparallelly  (NA -&gt; 1.37.1  ) [CRAN]\nlistenv     (NA -&gt; 0.9.1   ) [CRAN]\nglobals     (NA -&gt; 0.16.3  ) [CRAN]\nsvglite     (NA -&gt; 2.1.3   ) [CRAN]\nrstudioapi  (NA -&gt; 0.16.0  ) [CRAN]\nxml2        (NA -&gt; 1.3.6   ) [CRAN]\nini         (NA -&gt; 0.3.1   ) [CRAN]\nhttr2       (NA -&gt; 1.0.1   ) [CRAN]\ngitcreds    (NA -&gt; 0.1.2   ) [CRAN]\nfuture      (NA -&gt; 1.33.2  ) [CRAN]\nkableExtra  (NA -&gt; 1.4.0   ) [CRAN]\ngh          (NA -&gt; 1.4.1   ) [CRAN]\nfurrr       (NA -&gt; 0.3.1   ) [CRAN]\nforcats     (NA -&gt; 1.0.0   ) [CRAN]\ncorpcor     (NA -&gt; 1.6.10  ) [CRAN]\ncoda        (NA -&gt; 0.19-4.1) [CRAN]\n\nThe downloaded binary packages are in\n    /var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T//RtmpT4MzTm/downloaded_packages\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file ‘/private/var/folders/b3/2xm02wpd21qgrpkck5q1c6k40000gn/T/RtmpT4MzTm/remotes108b5c3a04d6/r4ss-r4ss-b6976cd/DESCRIPTION’ ... OK\n* preparing ‘r4ss’:\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building ‘r4ss_1.49.2.tar.gz’\n\n\nCode\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\ntheme_set(theme_bw())\n\n\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: Gulf of Alaska (GOA) Walleye Pollock\n\nRegion: AFSC\n\nAnalyst: Cole Monnahan",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#simplifications-to-the-original-assessment",
    "href": "content/AFSC-GOA-pollock.html#simplifications-to-the-original-assessment",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Simplifications to the original assessment",
    "text": "Simplifications to the original assessment\nThe model presented in this case study was changed substantially from the operational version and should not be considered reflective of the pollock stock. This is intended as a demonstration and nothing more.\nTo get the opertional model to more closely match FIMS I:\n\nDroped surveys 1, 4, and 5\nRemoved ageing error\nRemoved length compositions\nRemoved bias correction in log-normal index likelihoods\nSimplified catchability of survey 3 to be constant in time (removed random walk)\nUpdated maturity to be parametric rather than empirical\nUsed constant weight at age for all sources: spawning, fishery, surveys, and biomass calculations. The same matrix was used throughout.\nChangee timing to be Jan 1 for spawning and all surveys\nRemoved prior on catchability for survey 2\nRemoved time-varying fisheries selectivity (constant double logistic)\nTook off normalization of selectivity\nRemoved age accumulation for fishery age compositions",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#script-to-prepare-data-for-building-fims-object",
    "href": "content/AFSC-GOA-pollock.html#script-to-prepare-data-for-building-fims-object",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Script to prepare data for building FIMS object",
    "text": "Script to prepare data for building FIMS object\n\n\nCode\n## define the dimensions and global variables\nyears &lt;- 1970:2023\nnyears &lt;- length(years)\nnseasons &lt;- 1\nnages &lt;- 10\nages &lt;- 1:nages\n## nfleets &lt;- 1\n## This will fit the models bridging to FIMS (simplifying)\n## source(\"fit_bridge_models.R\")\n## compare changes to model\npkfitfinal &lt;- readRDS(\"data_files/pkfitfinal.RDS\")\npkfit0 &lt;- readRDS(\"data_files/pkfit0.RDS\")\nparfinal &lt;- pkfitfinal$obj$env$parList()\npkinput0 &lt;- readRDS('data_files/pkinput0.RDS')\nfimsdat &lt;- pkdat0 &lt;- pkinput0$dat\npkinput &lt;- readRDS('data_files/pkinput.RDS')",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#run-fims-model",
    "href": "content/AFSC-GOA-pollock.html#run-fims-model",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Run FIMS model",
    "text": "Run FIMS model\n\n\nCode\n## set up FIMS data objects\nclear()\nclear_logs()\nestimate_fish_selex &lt;- TRUE\nestimate_survey_selex &lt;- TRUE\nestimate_q2 &lt;- TRUE\nestimate_q3 &lt;- TRUE\nestimate_q6 &lt;- TRUE\nestimate_F &lt;- TRUE\nestimate_recdevs &lt;- TRUE\nsource(\"R/pk_prepare_FIMS_inputs.R\")\n## make FIMS model\nsuccess &lt;- CreateTMBModel()\nparameters &lt;- list(p = get_fixed())\nobj &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent = TRUE)\n## report values for the two models\nrep0 &lt;- pkfitfinal$rep\nrep1 &lt;- obj$report() # FIMS initial values\n## try fitting the model\nopt &lt;- TMBhelper::fit_tmb(obj, getsd=FALSE, newtonsteps=0, control=list(trace=100))\n## opt &lt;- with(obj, nlminb(start=par, objective=fn, gradient=gr))\nmax(abs(obj$gr())) # from Cole, can use TMBhelper::fit_tmb to get val to &lt;1e-10\nrep2 &lt;- obj$report() ## FIMS after estimation\n\n## Output plotting\nout1 &lt;- get_long_outputs(rep1, rep0) %&gt;%\n  mutate(platform=ifelse(platform=='FIMS', 'FIMS init', 'TMB'))\nout2 &lt;- get_long_outputs(rep2, rep0) %&gt;% filter(platform=='FIMS') %&gt;%\n  mutate(platform='FIMS opt')\nout &lt;- rbind(out1,out2)\ng &lt;- ggplot(out, aes(year, value, color=platform)) + geom_line() +\n  facet_wrap('name', scales='free') + ylim(0,NA) +\n  labs(x=NULL, y=NULL)\nggsave('figures/AFSC_PK_ts_comparison.png', g, width=9, height=5, units='in')\ng &lt;- ggplot(filter(out, platform!='TMB'), aes(year, relerror, color=platform)) + geom_line() +\n  facet_wrap('name', scales='free') +\n  labs(x=NULL, y='Relative difference') + coord_cartesian(ylim=c(-.5,.5))\nggsave('figures/AFSC_PK_ts_comparison_relerror.png', g, width=9, height=5, units='in')\n\n## Quick check on age comp fits\np1 &lt;- get_acomp_fits(rep0, rep1, rep2, fleet=1, years=pkdat0$fshyrs)\ng &lt;- ggplot(p1, aes(age, paa, color=platform)) + facet_wrap('year') + geom_line()\nggsave('figures/AFSC_PK_age_comp_fits_1.png', g, width=9, height=8, units='in')\np2 &lt;- get_acomp_fits(rep0, rep1, rep2, fleet=2, years=pkdat0$srv_acyrs2)\ng &lt;- ggplot(p2, aes(age, paa, color=platform)) + facet_wrap('year') + geom_line()\nggsave('figures/AFSC_PK_age_comp_fits_2.png', g, width=9, height=8, units='in')\n## p3 &lt;- get_acomp_fits(rep0, rep1, rep2, fleet=3, years=pkdat0$srv_acyrs3)\n## g &lt;- ggplot(p3, aes(age, paa, color=platform)) + facet_wrap('year') + geom_line()\n## p6 &lt;- get_acomp_fits(rep0, rep1, rep2, fleet=4, years=pkdat0$srv_acyrs6)\n## g &lt;- ggplot(p6, aes(age, paa, color=platform)) + facet_wrap('year') + geom_line()\n\n## index fits\naddsegs &lt;- function(yrs, obs, CV){\n  getlwr &lt;- function(obs, CV) qlnorm(p=.025, meanlog=log(obs), sdlog=sqrt(log(1+CV^2)))\n  getupr &lt;- function(obs, CV) qlnorm(p=.975, meanlog=log(obs), sdlog=sqrt(log(1+CV^2)))\n  segments(yrs, y0=getlwr(obs,CV), y1=getupr(obs,CV))\n  points(yrs, obs, pch=22, bg='white')\n}\npng('figures/AFSC_PK_index_fits.png', res=300, width=6, height=7, units='in')\npar(mfrow=c(3,1), mar=c(3,3,.5,.5), mgp=c(1.5,.5,0), tck=-0.02)\nplot(years, rep0$Eindxsurv2, type='l',\n     ylim=c(0,2), lwd=5.5,\n      xlab=NA, ylab='Biomass (million t)')\nx1 &lt;- out1 %&gt;% filter(name=='Index2' & platform=='FIMS init')\nx2 &lt;- out2 %&gt;% filter(name=='Index2' & platform=='FIMS opt')\nlines(years,x1$value, col=2, lwd=1.5)\nlines(years,x2$value, col=3, lwd=1.5)\naddsegs(yrs=pkdat0$srvyrs2, obs=pkdat0$indxsurv2, CV=pkdat0$indxsurv_log_sd2)\nlegend('topright', legend=c('TMB', 'FIMS init', 'FIMS opt'), lty=1, col=1:3)\nmtext('Survey 2', line=-1.5)\nplot(years, rep0$Eindxsurv3, type='l',\n     ylim=c(0,.6), lwd=5.5,\n      xlab=NA, ylab='Biomass (million t)')\nx1 &lt;- out1 %&gt;% filter(name=='Index3' & platform=='FIMS init')\nx2 &lt;- out2 %&gt;% filter(name=='Index3' & platform=='FIMS opt')\nlines(years,x1$value, col=2, lwd=1.5)\nlines(years,x2$value, col=3, lwd=1.5)\naddsegs(yrs=pkdat0$srvyrs3, obs=pkdat0$indxsurv3, CV=pkdat0$indxsurv_log_sd3)\nmtext('Survey 3', line=-1.5)\nlegend('topright', legend=c('TMB', 'FIMS init', 'FIMS opt'), lty=1, col=1:3)\nplot(years, rep0$Eindxsurv6, type='l',\n     ylim=c(0,2.6), lwd=5.5,\n      xlab=NA, ylab='Biomass (million t)')\nx1 &lt;- out1 %&gt;% filter(name=='Index6' & platform=='FIMS init')\nx2 &lt;- out2 %&gt;% filter(name=='Index6' & platform=='FIMS opt')\nlines(years,x1$value, col=2, lwd=1.5)\nlines(years,x2$value, col=3, lwd=1.5)\naddsegs(yrs=pkdat0$srvyrs6, obs=pkdat0$indxsurv6, CV=pkdat0$indxsurv_log_sd6)\nmtext('Survey 6', line=-1.5)\nlegend('topright', legend=c('TMB', 'FIMS init', 'FIMS opt'), lty=1, col=1:3)\ndev.off()",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#comparison-figures-for-basic-model",
    "href": "content/AFSC-GOA-pollock.html#comparison-figures-for-basic-model",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Comparison figures for basic model",
    "text": "Comparison figures for basic model",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#extra-analyses",
    "href": "content/AFSC-GOA-pollock.html#extra-analyses",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Extra analyses",
    "text": "Extra analyses\nTwo extra analyses are demonstrated. First is a likelihood profile over lnR0, showing component contributions and testing for data conflict (a Piner plot). The second is to run the model through the ‘Stan’ software using the ‘tmbstan’ R package. This samples from the posterior, which are put back into the model to get the posterior distribution for spawning stock biomass. Given its long run time the results are saved to a file and read in for post-hoc plotting.\n\n\nCode\n## Try a likelihood profile\ni &lt;- 68 # this will break if model is changed at all\nmap &lt;- parameters\nmap$p[i] &lt;- NA # map off R0 specified below\nmap$p &lt;- as.factor(map$p)\nxseq &lt;- as.numeric(c(opt$par[i],  seq(22,24, len=30)))\nres &lt;- list()\nfor(j in 1:length(xseq)){\n  print(j)\n  parameters$p[i] &lt;- xseq[j]\n  obj2 &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent = TRUE, map=map)\n  opt2 &lt;- TMBhelper::fit_tmb(obj2, getsd=FALSE, newtonsteps=0, control=list(trace=0))\n  out &lt;- obj2$report()\n  res[[j]] &lt;- data.frame(j=j, lnR0=xseq[j], total=out$jnll, index=out$index_nll,\n                         age=out$age_comp_nll,recruit=out$rec_nll, maxgrad=max(abs(obj$gr())))\n}\nres &lt;- bind_rows(res) %&gt;%\n  pivot_longer( cols=c(total, index, age, recruit)) %&gt;%\n  group_by(name) %&gt;% mutate(deltaNLL=value-min(value))\ng &lt;- ggplot(res, aes(lnR0, deltaNLL, color=name)) + geom_line()\ng &lt;- g+ geom_point(data=filter(res, deltaNLL==0), size=2) +\n  labs(y='Delta NLL', color='NLL component')\nggsave('figures/AFSC_PK_like_profile_R0.png', g, width=7, height=3.5)\n\n\n\n## ## Try Bayesian\n## library(tmbstan)\n## library(shinystan)\n## ## Some paraemters wandering off to Inf so fix those (need\n## ## priors). Needs a ton of work but is proof of concept. Major\n## ## problem is parallel fails.\n## map &lt;- parameters\n## ## parameters$p[65:66]\n## map$p[65:66] &lt;- NA # map off R0 specified below\n## map$p &lt;- as.factor(map$p)\n## obj3 &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent=TRUE, map=map)\n## opt3 &lt;- TMBhelper::fit_tmb(obj3, getsd=FALSE, newtonsteps=0, control=list(trace=0))\n## ## Fails when trying to do this in parallel unfortunately\n## fit &lt;- tmbstan(obj3, chains=1, cores=1, open_progress=FALSE,\n##                init='last.par.best', control=list(max_treedepth=10))\n## launch_shinystan(fit)\n## df &lt;- as.data.frame(fit)\n## df &lt;- df[,-ncol(df)] # drop lp__\n## ## for each posterior draw, report to get SSB\n## postreps &lt;- list()\n## for(ii in 1:nrow(df)){\n##   if(ii %% 10==0) print(ii)\n##   postreps[[ii]] &lt;- obj3$rep(df[ii,])\n## }\n## ssbpost &lt;- lapply(postreps, function(x) data.frame(year=years, ssb=x$ssb[[1]][-55]))%&gt;%\n##   bind_rows %&gt;% mutate(rep=rep(1:nrow(df), each=54))\n## saveRDS(ssbpost, file='pk_SSB_posteriors.RDS')\nssbpost &lt;- readRDS('data_files/pk_pollock_SSB_posteriors.RDS')\ng &lt;- ggplot(ssbpost, aes(year, ssb/1e9, group=rep)) + geom_line(alpha=.1) +\n  ylim(0,NA) + labs(x=NULL, y='SSB (M t)', title='Posterior demo (unconverged!)')\nggsave('figures/AFSC_PK_ssb_posterior.png', g, width=7, height=4, units='in')",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#plots-for-extra-analyses",
    "href": "content/AFSC-GOA-pollock.html#plots-for-extra-analyses",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Plots for extra analyses",
    "text": "Plots for extra analyses",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#comparison-table",
    "href": "content/AFSC-GOA-pollock.html#comparison-table",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Comparison table",
    "text": "Comparison table\nThe likelihood components from the TMB model do not include constants and thus are not directly comparable. To be fixed later. Relative differences between the modified TMB model and FIMS implementation are given in the figure above.",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "href": "content/AFSC-GOA-pollock.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "What was your experience using FIMS? What could we do to improve usability?",
    "text": "What was your experience using FIMS? What could we do to improve usability?\nTo do",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#list-any-issues-that-you-ran-into-or-found",
    "href": "content/AFSC-GOA-pollock.html#list-any-issues-that-you-ran-into-or-found",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "List any issues that you ran into or found",
    "text": "List any issues that you ran into or found\n\nOutput more derived quantities like selectivity, maturity, etc.\nNLL components are not separated by fleet and need to be. So age comp NLL for fleets 1 and 2 need to be separate to make, e.g., the likelihood profile plot above.\nNeed more ADREPORTed values like SSB",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/AFSC-GOA-pollock.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "href": "content/AFSC-GOA-pollock.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "What features are most important to add based on this case study?",
    "text": "What features are most important to add based on this case study?\n\nMore sophisticated control over selectivity so that ages 1 and 2 can be zeroed out for a double-logistic form, overriding the selectivity curve.\n\n\n\nCode\n# Clear C++ objects from memory\nclear()",
    "crumbs": [
      "AFSC GOA pollock case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html",
    "href": "content/NEFSC-yellowtail.html",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: Southern New England-Mid Atlantic Yellowtail Flounder\n\nRegion: NEFSC\n\nAnalyst: Chris Legault",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html#the-setup",
    "href": "content/NEFSC-yellowtail.html#the-setup",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: Southern New England-Mid Atlantic Yellowtail Flounder\n\nRegion: NEFSC\n\nAnalyst: Chris Legault",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html#simplifications-to-the-original-assessment",
    "href": "content/NEFSC-yellowtail.html#simplifications-to-the-original-assessment",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "Simplifications to the original assessment",
    "text": "Simplifications to the original assessment\n\nEnd year 2021 to 2019 due to missing 2020 survey\n5 indices to 2\nFilled a survey missing year for one index (see below)\nVarying weight at age to constant over time\nDifferent weight at age matrices for catch, SSB, Jan-1 to same for all 3\nSSB calculated in April to Jan-1\nAggregate index in numbers to weight\nFishery 2 selectivity blocks to 1\nCatch and Index selectivity at age to logistic\nIndex timing from April to Jan-1\nVarying Index CV to constant over time\nVarying Catch ESS to constant over time\nSR unexploited scaler SSB to recruitment\n\nHow I simplified my assessment:\nTo fill the missing year of survey data, I first ran the model in ASAP with the missing data treated as missing. I then filled the missing data with the expected value of the survey, both in aggregate and for catch at age in place of the missing data.\nThe varying weights at age, index CVs, and ESS values were replaced by the time series mean in all years.\nThe catch weight at age matrix was used as the weight at age for all sources.",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html#script-that-sets-up-and-runs-the-model",
    "href": "content/NEFSC-yellowtail.html#script-that-sets-up-and-runs-the-model",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "Script that sets up and runs the model",
    "text": "Script that sets up and runs the model\n\n\nCode\n# clear memory\nclear()\n\n# read the ASAP rdat files\nrdat &lt;- dget(file.path(\"data_files\", \"NEFSC_YT_SIMPLIFIED.RDAT\")) # to be used in FIMS, lots of modifications from original\norig &lt;- dget(file.path(\"data_files\", \"NEFSC_YT_ORIGINAL.RDAT\"))   # where started before modifications for use in FIMS\n\n# function to create equivalent of data_mile1, basic catch and survey data\n# need to think about how to deal with multiple fleets and indices - only use 1 of each for now\nget_asap_data &lt;- function(rdat){\n  res &lt;- data.frame(type = character(),\n                name = character(),\n                age = integer(),\n                datestart = character(),\n                dateend = character(),\n                value = double(),\n                unit = character(),\n                uncertainty = double())\n  \n  landings &lt;- data.frame(type = \"landings\",\n                     name = \"fleet1\",\n                     age = NA,\n                     datestart = paste0(seq(rdat$parms$styr, rdat$parms$endyr), \"-01-01\"),\n                     dateend = paste0(seq(rdat$parms$styr, rdat$parms$endyr), \"-12-31\"),\n                     value = as.numeric(rdat$catch.obs[1,]),\n                     unit = \"mt\",\n                     uncertainty = rdat$control.parms$catch.tot.cv[,1])\n  \n  # loop over all indices\n  for (i in 1:rdat$parms$nindices){\n    index &lt;- data.frame(type = \"index\",\n                        name = paste0(\"survey\", i),\n                        age = NA,\n                        datestart = paste0(seq(rdat$parms$styr, rdat$parms$endyr), \"-01-01\"),\n                        dateend = paste0(seq(rdat$parms$styr, rdat$parms$endyr), \"-12-31\"),\n                        value = as.numeric(rdat$index.obs[[i]]),\n                        unit = \"\",\n                        uncertainty = rdat$index.cv[[i]])\n    if (i == 1){\n      allinds &lt;- index\n    }else{\n      allinds &lt;- rbind(allinds, index)\n    }\n  }\n  \n  catchage &lt;- data.frame(type = \"age\",\n                     name = \"fleet1\",\n                     age = rep(seq(1,rdat$parms$nages), rdat$parms$nyears),\n                     datestart = rep(paste0(seq(rdat$parms$styr, rdat$parms$endyr), \"-01-01\"), each=rdat$parms$nages),\n                     dateend = rep(paste0(seq(rdat$parms$styr, rdat$parms$endyr), \"-12-31\"), each=rdat$parms$nages),\n                     value = as.numeric(t(rdat$catch.comp.mats$catch.fleet1.ob)),\n                     unit = \"\",\n                     uncertainty = rep(rdat$fleet.catch.Neff.init[1,], each=rdat$parms$nages))\n  \n  # loop over all indices\n  for (i in 1:rdat$parms$nindices){\n    indexage &lt;- data.frame(type = \"age\",\n                           name = paste0(\"survey\", i),\n                           age = rep(seq(1,rdat$parms$nages), rdat$parms$nyears),\n                           datestart = rep(paste0(seq(rdat$parms$styr, rdat$parms$endyr), \"-01-01\"), each=rdat$parms$nages),\n                           dateend = rep(paste0(seq(rdat$parms$styr, rdat$parms$endyr), \"-12-31\"), each=rdat$parms$nages),\n                           value = as.numeric(t(rdat$index.comp.mats[[i*2-1]])),\n                           unit = \"\",\n                           uncertainty = rep(rdat$index.Neff.init[i,], each=rdat$parms$nages))\n    if (i == 1){\n      allindsage &lt;- indexage\n    }else{\n      allindsage &lt;- rbind(allindsage, indexage)\n    }\n  }\n  \n  res &lt;- rbind(res, landings, allinds, catchage, allindsage)\n  return(res)\n}\n\nmydat &lt;- get_asap_data(rdat)\n\nmyfimsframe &lt;- FIMS::FIMSFrame(mydat)\n#str(myfimsframe)\n\n# define the dimensions\nnyears &lt;- rdat$parms$nyears\nyears &lt;- seq(rdat$parms$styr, rdat$parms$endyr)\nnseasons &lt;- 1 # ASAP only has one season\nnages &lt;- rdat$parms$nages\nages &lt;- 1:nages # ASAP starts at age 1\n\n\n# set up FIMS data objects\nage_frame &lt;- FIMS::FIMSFrame(mydat)\n\nfishery_catch &lt;- FIMS::m_landings(age_frame)\nfishery_agecomp &lt;- FIMS::m_agecomp(age_frame, \"fleet1\")\nsurvey_index &lt;- list()\nsurvey_agecomp &lt;- list()\nfor (i in 1:rdat$parms$nindices){\n  survey_index[[i]] &lt;- FIMS::m_index(age_frame, paste0(\"survey\", i))\n  survey_agecomp[[i]] &lt;- FIMS::m_agecomp(age_frame, paste0(\"survey\", i))\n}\n\n# eventually change to allow multiple fishing fleets similar to multiple indices - only using 1 fishing fleet for now\nfishing_fleet_index &lt;- methods::new(Index, nyears)\nfishing_fleet_age_comp &lt;- methods::new(AgeComp, nyears, nages)\nfishing_fleet_index$index_data &lt;- fishery_catch\nfishing_fleet_age_comp$age_comp_data &lt;- fishery_agecomp * rep(rdat$fleet.catch.Neff.init[1,], each=rdat$parms$nages)\n\n\n# fleet selectivity\n#methods::show(LogisticSelectivity)\nfishing_fleet_selectivity &lt;- methods::new(LogisticSelectivity)\nfishing_fleet_selectivity$inflection_point$value &lt;- rdat$sel.input.mats$fleet.sel.ini[nages+1,1] # hardwired to assume only 1 fleet and logistic selectivity used\nfishing_fleet_selectivity$inflection_point$is_random_effect &lt;- FALSE\nfishing_fleet_selectivity$inflection_point$estimated &lt;- TRUE\nfishing_fleet_selectivity$slope$value &lt;- rdat$sel.input.mats$fleet.sel.ini[nages+2,1] # hardwired to assume only 1 fleet and logistic selectivity used\nfishing_fleet_selectivity$slope$is_random_effect &lt;- FALSE\nfishing_fleet_selectivity$slope$estimated &lt;- TRUE\n\n# create fleet object\nfishing_fleet &lt;- methods::new(Fleet)\nfishing_fleet$nages &lt;- nages\nfishing_fleet$nyears &lt;- nyears\nfishing_fleet$log_Fmort &lt;- log(rep(rdat$initial.guesses$Fmult.year1.init[1], nyears)) # ASAP assumes Fmult devs = 0\nfishing_fleet$estimate_F &lt;- TRUE\nfishing_fleet$random_F &lt;- FALSE\nfishing_fleet$log_q &lt;- log(rdat$initial.guesses$q.year1.init[1])\nfishing_fleet$estimate_q &lt;- FALSE\nfishing_fleet$random_q &lt;- FALSE\nfishing_fleet$log_obs_error &lt;- rep(log(sqrt(log(as.numeric(mean(rdat$control.parms$catch.tot.cv[,1], na.rm=TRUE)^2) + 1))), nyears)\nfishing_fleet$estimate_obs_error &lt;- FALSE\n# Next two lines not currently used by FIMS\nfishing_fleet$SetAgeCompLikelihood(1)\nfishing_fleet$SetIndexLikelihood(1)\n# Set Index, AgeComp, and Selectivity using the IDs from the modules defined above\nfishing_fleet$SetObservedIndexData(fishing_fleet_index$get_id()) \nfishing_fleet$SetObservedAgeCompData(fishing_fleet_age_comp$get_id())\nfishing_fleet$SetSelectivity(fishing_fleet_selectivity$get_id())\n\n# survey module now can handle multiple indices\nfor (i in 1:rdat$parms$nindices){\n  survey_fleet_index &lt;- methods::new(Index, nyears)\n  survey_fleet_age_comp &lt;- methods::new(AgeComp, nyears, nages)\n  survey_fleet_index$index_data &lt;- survey_index[[i]]\n  survey_fleet_age_comp$age_comp_data &lt;- survey_agecomp[[i]] * rep(rdat$index.Neff.init[i,], each=rdat$parms$nages)\n  \n  # survey selectivity\n  survey_fleet_selectivity &lt;- new(LogisticSelectivity)\n  survey_fleet_selectivity$inflection_point$value &lt;- rdat$sel.input.mats$index.sel.ini[(i+1)*(nages+2+4)+nages+1,1] # hardwired for this example\n  survey_fleet_selectivity$inflection_point$is_random_effect &lt;- FALSE\n  survey_fleet_selectivity$inflection_point$estimated &lt;- TRUE\n  survey_fleet_selectivity$inflection_point$value &lt;- rdat$sel.input.mats$index.sel.ini[(i+1)*(nages+2+4)+nages+1,1] # hardwired for this example\n  survey_fleet_selectivity$slope$is_random_effect &lt;- FALSE\n  survey_fleet_selectivity$slope$estimated &lt;- TRUE\n  \n  survey_fleet &lt;- methods::new(Fleet)\n  survey_fleet$is_survey &lt;- TRUE\n  survey_fleet$nages &lt;- nages\n  survey_fleet$nyears &lt;- nyears\n  survey_fleet$estimate_F &lt;- FALSE\n  survey_fleet$random_F &lt;- FALSE\n  survey_fleet$log_q &lt;- log(rdat$initial.guesses$q.year1.init[i]) \n  survey_fleet$estimate_q &lt;- TRUE\n  survey_fleet$random_q &lt;- FALSE\n  # sd = sqrt(log(cv^2 + 1)), sd is log transformed\n  survey_fleet$log_obs_error &lt;- rep(log(sqrt(log(as.numeric(mean(rdat$index.cv[[i]], na.rm=TRUE)^2 + 1)))), nyears)\n  survey_fleet$estimate_obs_error &lt;- FALSE\n  survey_fleet$SetAgeCompLikelihood(i)\n  survey_fleet$SetIndexLikelihood(i)\n  survey_fleet$SetSelectivity(survey_fleet_selectivity$get_id())\n  survey_fleet$SetObservedIndexData(survey_fleet_index$get_id())\n  survey_fleet$SetObservedAgeCompData(survey_fleet_age_comp$get_id())\n}\n\n# Population module\n\n# recruitment\nrecruitment &lt;- methods::new(BevertonHoltRecruitment)\n#methods::show(BevertonHoltRecruitment)\n\nrecruitment$log_sigma_recruit$value &lt;- log(mean(rdat$control.parms$recruit.cv)) # typically enter same value for every year in ASAP\nrecruitment$log_rzero$value &lt;- log(rdat$initial.guesses$SR.inits$SR.scaler.init) # ASAP can enter either R0 or SSB0, need to make sure use R0 in input file\nrecruitment$log_rzero$is_random_effect &lt;- FALSE\nrecruitment$log_rzero$estimated &lt;- TRUE\n# note: do not set steepness exactly equal to 1, use 0.99 instead in ASAP run\nrecruitment$logit_steep$value &lt;- -log(1.0 - rdat$initial.guesses$SR.inits$SR_steepness.init) + log(rdat$initial.guesses$SR.inits$SR_steepness.init - 0.2)\nrecruitment$logit_steep$is_random_effect &lt;- FALSE\nrecruitment$logit_steep$estimated &lt;- FALSE\n\nrecruitment$estimate_log_devs &lt;- TRUE\nrecruitment$log_devs &lt;- rep(1.0, nyears) # set to no deviations (multiplier) to start, just like ASAP\n\n# growth\newaa_growth &lt;- methods::new(EWAAgrowth)\newaa_growth$ages &lt;- ages\n# NOTE: FIMS currently cannot use matrix of WAA, so have to ensure constant WAA over time in ASAP file for now\newaa_growth$weights &lt;- rdat$WAA.mats$WAA.catch.all[1,] \n\n# NOTE: FIMS assumes SSB calculated at the start of the year, so need to adjust ASAP to do so as well for now, need to make timing of SSB calculation part of FIMS later\n\n# maturity\n# NOTE: for now tricking FIMS into thinking age 0 is age 1, so need to adjust A50 for maturity because FIMS calculations use ages 0-5+ instead of 1-6\nmaturity &lt;- new(LogisticMaturity)\nmaturity$inflection_point$value &lt;- 1.8 # hardwired for now, need to figure out a better way than this\nmaturity$inflection_point$is_random_effect &lt;- FALSE\nmaturity$inflection_point$estimated &lt;- FALSE\nmaturity$slope$value &lt;- 4 # hardwired for now, need to figure out a better way than this\nmaturity$slope$is_random_effect &lt;- FALSE\nmaturity$slope$estimated &lt;- FALSE\n\n# population\npopulation &lt;- new(Population)\npopulation$log_M &lt;- log(as.numeric(t(rdat$M.age)))\npopulation$estimate_M &lt;- FALSE\npopulation$log_init_naa &lt;- log(rdat$N.age[1,]) # log(rdat$initial.guesses$NAA.year1.init)\npopulation$estimate_init_naa &lt;- FALSE # TRUE , NOTE: fixing at ASAP estimates to test SSB calculations\npopulation$nages &lt;- nages\npopulation$ages &lt;- ages\npopulation$nfleets &lt;- rdat$parms$nfleets + rdat$parms$nindices # fleets plus surveys\npopulation$nseasons &lt;- nseasons\npopulation$nyears &lt;- nyears\n#population$prop_female &lt;- 1.0 # ASAP assumption\n\npopulation$SetMaturity(maturity$get_id())\npopulation$SetGrowth(ewaa_growth$get_id())\npopulation$SetRecruitment(recruitment$get_id())\n\n# make FIMS model\nsucess &lt;- CreateTMBModel()\nparameters &lt;- list(p = get_fixed())\nobj &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent = TRUE)\n\n\n# fitting the model\nopt &lt;- nlminb(start=obj$par, objective=obj$fn, gradient=obj$gr,\n              control = list(eval.max = 8000, iter.max = 800))\n#  method = \"BFGS\",\n#   control = list(maxit=1000000, reltol = 1e-15))\n#print(opt)\n\n\n#max(abs(obj$gr())) # from Cole, can use TMBhelper::fit_tmb to get val to &lt;1e-10\n\n#opt &lt;- TMBhelper::fit_tmb(obj, newtonsteps=3, quiet = TRUE) # don't understand why quiet flag does not work in Quarto\n\n#max(abs(obj$gr()))\n\nsdr &lt;- TMB::sdreport(obj)\nsdr_fixed &lt;- summary(sdr, \"fixed\")\nreport &lt;- obj$report()\n\n### Plotting\n\nmycols &lt;- c(\"FIMS\" = \"blue\", \"ASAP\" = \"red\", \"ASAP_orig\" = \"darkgreen\")\n\nfor (i in 1:rdat$parms$nindices){\n  index_results &lt;- data.frame(\n    survey = i,\n    year = years,\n    observed = rdat$index.obs[[i]],\n    FIMS = report$exp_index[[rdat$parms$nfleet+i]],\n    ASAP = rdat$index.pred[[i]]\n  )\n  if (i==1){\n    allinds_results &lt;- index_results\n  }else{\n    allinds_results &lt;- rbind(allinds_results, index_results)\n  }\n}\n#print(allinds_results)\n\ncomp_index &lt;- ggplot(allinds_results, aes(x = year, y = observed)) +\n  geom_point() +\n  geom_line(aes(x = year, y = FIMS), color = \"blue\") +\n  geom_line(aes(x = year, y = ASAP), color = \"red\") +\n  facet_wrap(~survey, scales = \"free_y\", nrow = 2) +\n  xlab(\"Year\") +\n  ylab(\"Index\") +\n  ggtitle(\"Blue=FIMS, Red=ASAP\") +\n  theme_bw()\n#print(comp_index)\n\ncatch_results &lt;- data.frame(\n  observed = fishing_fleet_index$index_data,\n  FIMS = report$exp_index[[1]],\n  ASAP = as.numeric(rdat$catch.pred[1,])\n)\n#print(catch_results)\n\ncomp_catch &lt;- ggplot(catch_results, aes(x = years, y = observed)) +\n  geom_point() +\n  xlab(\"Year\") +\n  ylab(\"Catch (mt)\") +\n  geom_line(aes(x = years, y = FIMS), color = \"blue\") +\n  geom_line(aes(x = years, y = ASAP), color = \"red\") +\n  ggtitle(\"Blue=FIMS, Red=ASAP\") +\n  theme_bw()\n#print(comp_catch)\n\npop_results &lt;- data.frame(\n  Year = c(years, max(years)+1, years, years, years, years, max(years)+1, years),\n  Metric = c(rep(\"SSB\", 2*nyears+1), rep(\"F_mort\", 2*nyears), rep(\"Recruitment\", 2*nyears+1)),\n  Model = c(rep(\"FIMS\", nyears+1), rep(\"ASAP\", nyears), rep(c(\"FIMS\", \"ASAP\"), each=nyears), \n             rep(\"FIMS\", nyears+1), rep(\"ASAP\", nyears)),\n  Value = c(report$ssb[[1]], rdat$SSB, report$F_mort[[1]], rdat$F.report, report$recruitment[[1]], as.numeric(rdat$N.age[,1]))\n)\n#print(pop_results)\n\n# ggplot(filter(pop_results, Year &lt;=2019), aes(x=Year, y=Value, color=Model)) +\n#   geom_line() +\n#   facet_wrap(~Metric, ncol=1, scales = \"free_y\") +\n#   theme_bw() +\n#   scale_color_manual(values = mycols)\n\norig_years &lt;- seq(orig$parms$styr, orig$parms$endyr)\norig_pop_results &lt;- data.frame(\n  Year = rep(orig_years, 3),\n  Metric = rep(c(\"SSB\", \"F_mort\", \"Recruitment\"), each = length(orig_years)),\n  Model = \"ASAP_orig\",\n  Value = c(orig$SSB, orig$F.report, as.numeric(orig$N.age[,1]))\n)\n\npop_results_3 &lt;- rbind(pop_results, orig_pop_results)\n#print(pop_results_3)\n\n# ggplot(filter(pop_results_3, Year &lt;=2019), aes(x=Year, y=Value, color=Model)) +\n#   geom_line() +\n#   facet_wrap(~Metric, ncol=1, scales = \"free_y\") +\n#   theme_bw() +\n#   scale_color_manual(values = mycols)\n\ncomp_FRSSB3 &lt;- ggplot(pop_results_3, aes(x=Year, y=Value, color=Model)) +\n  geom_line() +\n  facet_wrap(~Metric, ncol=1, scales = \"free_y\") +\n  theme_bw() +\n  scale_color_manual(values = mycols)\n#print(comp_FRSSB3)\n\nFIMS_naa_results &lt;- data.frame(\n  Year = rep(c(years, max(years)+1), each = nages),\n  Age = rep(ages, nyears+1),\n  Metric = \"NAA\",\n  Model = \"FIMS\",\n  Value = report$naa[[1]]\n)\n\nASAP_naa_results &lt;- data.frame(\n  Year = rep(years, each = nages),\n  Age = rep(ages, nyears),\n  Metric = \"NAA\",\n  Model = \"ASAP\",\n  Value = as.numeric(t(rdat$N.age))\n)\n\norig_naa_results &lt;- data.frame(\n  Year = rep(orig_years, each = nages),\n  Age = rep(ages, length(orig_years)),\n  Metric = \"NAA\",\n  Model = \"ASAP_orig\",\n  Value = as.numeric(t(orig$N.age))\n)\nnaa_results &lt;- rbind(FIMS_naa_results, ASAP_naa_results, orig_naa_results)\n#print(naa_results)\n\n# ggplot(filter(naa_results, Year &lt;= 2019), aes(x=Year, y=Value, color=Model)) +\n#   geom_line() +\n#   facet_wrap(~Age, ncol=1, scales = \"free_y\") +\n#   ylab(\"NAA\") +\n#   theme_bw() +\n#   scale_color_manual(values = mycols)\n\ncomp_naa2 &lt;- ggplot(filter(naa_results, Year &lt;= 2019, Model %in% c(\"ASAP\", \"FIMS\")), aes(x=Year, y=Value, color=Model)) +\n  geom_line() +\n  facet_wrap(~Age, ncol=1, scales = \"free_y\") +\n  ylab(\"NAA\") +\n  theme_bw() +\n  scale_color_manual(values = mycols)\n#print(comp_naa2)\n\n# ggplot(filter(naa_results, Year == 1973, Model %in% c(\"ASAP\", \"FIMS\")), aes(x=Age, y=Value, color=Model)) +\n#   geom_line() +\n#   ylab(\"NAA in Year 1\") +\n#   theme_bw() +\n#   scale_color_manual(values = mycols)\n\n\nsaveplots &lt;- TRUE\nif(saveplots){\n  ggsave(filename = \"figures/NEFSC_YT_compare_index.png\", plot = comp_index, width = 4, height = 4, units = \"in\")\n  ggsave(filename = \"figures/NEFSC_YT_compare_catch.png\", plot = comp_catch, width = 4, height = 4, units = \"in\")\n  ggsave(filename = \"figures/NEFSC_YT_compare_FRSSB3.png\", plot = comp_FRSSB3, width = 5, height = 6.5, units = \"in\")\n  ggsave(filename = \"figures/NEFSC_YT_compare_NAA2.png\", plot = comp_naa2, width = 5, height = 6.5, units = \"in\")\n}",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html#comparison-figures",
    "href": "content/NEFSC-yellowtail.html#comparison-figures",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "Comparison figures",
    "text": "Comparison figures",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html#comparison-table",
    "href": "content/NEFSC-yellowtail.html#comparison-table",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "Comparison table",
    "text": "Comparison table\nThe likelihood components from FIMS and ASAP for the same data are shown in the table below. Note that the ASAP file had to turn on the use likelihood constants option to enable this comparison (this option should not be used when recruitment deviations are estimated).\n\n\nCode\njnlltab &lt;- data.frame(Component=c(\"Total\",\"Index\",\"Age Comp\", \"Rec\"),\n                      FIMS = c(report$jnll, report$index_nll, report$age_comp_nll, report$rec_nll),\n                      ASAP = c(rdat$like$lk.total,\n                               (rdat$like$lk.catch.total + rdat$like$lk.index.fit.total),\n                               (rdat$like$lk.catch.age.comp + rdat$like$lk.index.age.comp),\n                               rdat$like$lk.Recruit.devs))\nprint(jnlltab)\n\n\n  Component      FIMS     ASAP\n1     Total 1569.4796 2410.844\n2     Index   63.7218 1020.548\n3  Age Comp 1360.0192 1390.297\n4       Rec  145.7386    0.000",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "href": "content/NEFSC-yellowtail.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "What was your experience using FIMS? What could we do to improve usability?",
    "text": "What was your experience using FIMS? What could we do to improve usability?\nRelatively easy to use by following the vignette. Creating wrappers for data input would help so that each element did not need to be assigned directly.",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html#list-any-issues-that-you-ran-into-or-found",
    "href": "content/NEFSC-yellowtail.html#list-any-issues-that-you-ran-into-or-found",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "List any issues that you ran into or found",
    "text": "List any issues that you ran into or found\nPlease open an issue if you found something new.\n\nSSB calculations in FIMS assume 0.5 multiplier, which differs from ASAP Issue #521.\nOutput all derived values (this is mostly done)\nFix recruitment estimation Issue #364\nHandle missing data, especially surveys Issue #502\nWeights at age that change over time\nSeparate weights at age for catch, SSB, Jan-1 population, indices, etc.\nFishery selectivity blocks or random effects\nAllow time-varying CVs and ESS (or alternative functions)\nOption for Index in numbers\nTiming of Index and SSB calculations within the year\nOne-step-ahead residuals\nReference points, projections, pushbutton retro",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/NEFSC-yellowtail.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "href": "content/NEFSC-yellowtail.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "title": "NEFSC Case Study Southern New England-Mid Atlantic Yellowtail Flounder",
    "section": "What features are most important to add based on this case study?",
    "text": "What features are most important to add based on this case study?\n\nMissing values, would allow inclusion of the other 3 indices (too many missing years to fill for this example)\n\n\n\nCode\n# Clear C++ objects from memory\nclear()",
    "crumbs": [
      "NEFSC yellowtail flounder case study"
    ]
  },
  {
    "objectID": "content/rendering.html",
    "href": "content/rendering.html",
    "title": "Rendering",
    "section": "",
    "text": "The repo includes a GitHub Action that will render (build) the website automatically when you make changes to the files. It will be pushed to the gh-pages branch.\nBut when you are developing your content, you will want to render it locally.",
    "crumbs": [
      "Rendering"
    ]
  },
  {
    "objectID": "content/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "href": "content/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "title": "Rendering",
    "section": "Step 1. Make sure you have a recent RStudio",
    "text": "Step 1. Make sure you have a recent RStudio\nHave you updated RStudio since about August 2022? No? Then update to a newer version of RStudio. In general, you want to keep RStudio updated and it is required to have a recent version to use Quarto.",
    "crumbs": [
      "Rendering"
    ]
  },
  {
    "objectID": "content/rendering.html#step-2.-clone-and-create-rstudio-project",
    "href": "content/rendering.html#step-2.-clone-and-create-rstudio-project",
    "title": "Rendering",
    "section": "Step 2. Clone and create RStudio project",
    "text": "Step 2. Clone and create RStudio project\nFirst, clone the repo onto your local computer. How? You can click File &gt; New Project and then select “Version Control”. Paste in the url of the repository. That will clone the repo on to your local computer. When you make changes, you will need to push those up.",
    "crumbs": [
      "Rendering"
    ]
  },
  {
    "objectID": "content/rendering.html#step-3.-render-within-rstudio",
    "href": "content/rendering.html#step-3.-render-within-rstudio",
    "title": "Rendering",
    "section": "Step 3. Render within RStudio",
    "text": "Step 3. Render within RStudio\nRStudio will recognize that this is a Quarto project by the presence of the _quarto.yml file and will see the “Build” tab. Click the “Render website” button to render to the _site folder.\nPreviewing: You can either click index.html in the _site folder and specify “preview in browser” or set up RStudio to preview to the viewer panel. To do the latter, go to Tools &gt; Global Options &gt; R Markdown. Then select “Show output preview in: Viewer panel”.",
    "crumbs": [
      "Rendering"
    ]
  },
  {
    "objectID": "content/acknowledgements.html",
    "href": "content/acknowledgements.html",
    "title": "Acknowledgments",
    "section": "",
    "text": "This repo and GitHub Action was based on the tutorial by Openscapes quarto-website-tutorial by Julia Lowndes and Stefanie Butland.",
    "crumbs": [
      "Acknowledgements"
    ]
  },
  {
    "objectID": "content/rmarkdown.html",
    "href": "content/rmarkdown.html",
    "title": "R Markdown",
    "section": "",
    "text": "You can include R Markdown files in your project.",
    "crumbs": [
      "R Markdown files"
    ]
  },
  {
    "objectID": "content/rmarkdown.html#r-markdown",
    "href": "content/rmarkdown.html#r-markdown",
    "title": "R Markdown",
    "section": "R Markdown",
    "text": "R Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00",
    "crumbs": [
      "R Markdown files"
    ]
  },
  {
    "objectID": "content/rmarkdown.html#including-plots",
    "href": "content/rmarkdown.html#including-plots",
    "title": "R Markdown",
    "section": "Including Plots",
    "text": "Including Plots\nYou can also embed plots, for example:\n\n\n\n\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.",
    "crumbs": [
      "R Markdown files"
    ]
  },
  {
    "objectID": "content/setup.html",
    "href": "content/setup.html",
    "title": "NOAA FIMS case studies",
    "section": "",
    "text": "# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)"
  },
  {
    "objectID": "content/pc.html",
    "href": "content/pc.html",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\ntheme_set(theme_bw())\n\n\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: Gulf of Alaska (GOA) Walleye Pollock\n\nRegion: AFSC\n\nAnalyst: Cole Monnahan"
  },
  {
    "objectID": "content/pc.html#the-setup",
    "href": "content/pc.html#the-setup",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "",
    "text": "Code\n# Names of required packages\npackages &lt;- c(\"dplyr\", \"tidyr\", \"ggplot2\", \"TMB\", \"reshape2\", \"here\", \"remotes\", \"lubridate\")\n\n# Install packages not yet installed\ninstalled_packages &lt;- packages %in% rownames(installed.packages())\nif (any(installed_packages == FALSE)) {\n  install.packages(packages[!installed_packages], repos = \"http://cran.us.r-project.org\")\n}\n\nremotes::install_github(\"kaskr/TMB_contrib_R/TMBhelper\")\nremotes::install_github(\"NOAA-FIMS/FIMS\")\nremotes::install_github(\"r4ss/r4ss\")\n\n# Load packages\ninvisible(lapply(packages, library, character.only = TRUE))\n\nlibrary(FIMS)\nlibrary(TMBhelper)\n\nR_version &lt;- version$version.string\nTMB_version &lt;- packageDescription(\"TMB\")$Version\nFIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\n\nCode\ntheme_set(theme_bw())\n\n\n# R_version &lt;- version$version.string\n# TMB_version &lt;- packageDescription(\"TMB\")$Version\n# FIMS_commit &lt;- substr(packageDescription(\"FIMS\")$GithubSHA1, 1, 7)\n\n\n\nR version: R version 4.4.1 (2024-06-14)\n\nTMB version: 1.9.11\n\nFIMS commit: f939fc0\n\nStock name: Gulf of Alaska (GOA) Walleye Pollock\n\nRegion: AFSC\n\nAnalyst: Cole Monnahan"
  },
  {
    "objectID": "content/pc.html#simplifications-to-the-original-assessment",
    "href": "content/pc.html#simplifications-to-the-original-assessment",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Simplifications to the original assessment",
    "text": "Simplifications to the original assessment\nThe model presented in this case study was changed substantially from the operational version and should not be considered reflective of the pollock stock. This is intended as a demonstration and nothing more.\nTo get the opertional model to more closely match FIMS I:\n\nDroped surveys 1, 4, and 5\nRemoved ageing error\nRemoved length compositions\nRemoved bias correction in log-normal index likelihoods\nSimplified catchability of survey 3 to be constant in time (removed random walk)\nUpdated maturity to be parametric rather than empirical\nUsed constant weight at age for all sources: spawning, fishery, surveys, and biomass calculations. The same matrix was used throughout.\nChangee timing to be Jan 1 for spawning and all surveys\nRemoved prior on catchability for survey 2\nRemoved time-varying fisheries selectivity (constant double logistic)\nTook off normalization of selectivity\nRemoved age accumulation for fishery age compositions"
  },
  {
    "objectID": "content/pc.html#script-to-prepare-data-for-building-fims-object",
    "href": "content/pc.html#script-to-prepare-data-for-building-fims-object",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Script to prepare data for building FIMS object",
    "text": "Script to prepare data for building FIMS object\n\n\nCode\n## define the dimensions and global variables\nyears &lt;- 1970:2023\nnyears &lt;- length(years)\nnseasons &lt;- 1\nnages &lt;- 10\nages &lt;- 1:nages\n## nfleets &lt;- 1\n## This will fit the models bridging to FIMS (simplifying)\n## source(\"fit_bridge_models.R\")\n## compare changes to model\npkfitfinal &lt;- readRDS(\"data_files/pkfitfinal.RDS\")\npkfit0 &lt;- readRDS(\"data_files/pkfit0.RDS\")\nparfinal &lt;- pkfitfinal$obj$env$parList()\npkinput0 &lt;- readRDS('data_files/pkinput0.RDS')\nfimsdat &lt;- pkdat0 &lt;- pkinput0$dat\npkinput &lt;- readRDS('data_files/pkinput.RDS')"
  },
  {
    "objectID": "content/pc.html#run-fims-model",
    "href": "content/pc.html#run-fims-model",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Run FIMS model",
    "text": "Run FIMS model\n\n\nCode\n## set up FIMS data objects\nclear()\nclear_logs()\nestimate_fish_selex &lt;- TRUE\nestimate_survey_selex &lt;- TRUE\nestimate_q2 &lt;- TRUE\nestimate_q3 &lt;- TRUE\nestimate_q6 &lt;- TRUE\nestimate_F &lt;- TRUE\nestimate_recdevs &lt;- TRUE\nsource(\"R/pk_prepare_FIMS_inputs.R\")\n## make FIMS model\nsuccess &lt;- CreateTMBModel()\nparameters &lt;- list(p = get_fixed())\nobj &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent = TRUE)\n## report values for the two models\nrep0 &lt;- pkfitfinal$rep\nrep1 &lt;- obj$report() # FIMS initial values\n## try fitting the model\nopt &lt;- TMBhelper::fit_tmb(obj, getsd=FALSE, newtonsteps=0, control=list(trace=100))\n## opt &lt;- with(obj, nlminb(start=par, objective=fn, gradient=gr))\nmax(abs(obj$gr())) # from Cole, can use TMBhelper::fit_tmb to get val to &lt;1e-10\nrep2 &lt;- obj$report() ## FIMS after estimation\n\n## Output plotting\nout1 &lt;- get_long_outputs(rep1, rep0) %&gt;%\n  mutate(platform=ifelse(platform=='FIMS', 'FIMS init', 'TMB'))\nout2 &lt;- get_long_outputs(rep2, rep0) %&gt;% filter(platform=='FIMS') %&gt;%\n  mutate(platform='FIMS opt')\nout &lt;- rbind(out1,out2)\ng &lt;- ggplot(out, aes(year, value, color=platform)) + geom_line() +\n  facet_wrap('name', scales='free') + ylim(0,NA) +\n  labs(x=NULL, y=NULL)\nggsave('figures/AFSC_PK_ts_comparison.png', g, width=9, height=5, units='in')\ng &lt;- ggplot(filter(out, platform!='TMB'), aes(year, relerror, color=platform)) + geom_line() +\n  facet_wrap('name', scales='free') +\n  labs(x=NULL, y='Relative difference') + coord_cartesian(ylim=c(-.5,.5))\nggsave('figures/AFSC_PK_ts_comparison_relerror.png', g, width=9, height=5, units='in')\n\n## Quick check on age comp fits\np1 &lt;- get_acomp_fits(rep0, rep1, rep2, fleet=1, years=pkdat0$fshyrs)\ng &lt;- ggplot(p1, aes(age, paa, color=platform)) + facet_wrap('year') + geom_line()\nggsave('figures/AFSC_PK_age_comp_fits_1.png', g, width=9, height=8, units='in')\np2 &lt;- get_acomp_fits(rep0, rep1, rep2, fleet=2, years=pkdat0$srv_acyrs2)\ng &lt;- ggplot(p2, aes(age, paa, color=platform)) + facet_wrap('year') + geom_line()\nggsave('figures/AFSC_PK_age_comp_fits_2.png', g, width=9, height=8, units='in')\n## p3 &lt;- get_acomp_fits(rep0, rep1, rep2, fleet=3, years=pkdat0$srv_acyrs3)\n## g &lt;- ggplot(p3, aes(age, paa, color=platform)) + facet_wrap('year') + geom_line()\n## p6 &lt;- get_acomp_fits(rep0, rep1, rep2, fleet=4, years=pkdat0$srv_acyrs6)\n## g &lt;- ggplot(p6, aes(age, paa, color=platform)) + facet_wrap('year') + geom_line()\n\n## index fits\naddsegs &lt;- function(yrs, obs, CV){\n  getlwr &lt;- function(obs, CV) qlnorm(p=.025, meanlog=log(obs), sdlog=sqrt(log(1+CV^2)))\n  getupr &lt;- function(obs, CV) qlnorm(p=.975, meanlog=log(obs), sdlog=sqrt(log(1+CV^2)))\n  segments(yrs, y0=getlwr(obs,CV), y1=getupr(obs,CV))\n  points(yrs, obs, pch=22, bg='white')\n}\npng('figures/AFSC_PK_index_fits.png', res=300, width=6, height=7, units='in')\npar(mfrow=c(3,1), mar=c(3,3,.5,.5), mgp=c(1.5,.5,0), tck=-0.02)\nplot(years, rep0$Eindxsurv2, type='l',\n     ylim=c(0,2), lwd=5.5,\n      xlab=NA, ylab='Biomass (million t)')\nx1 &lt;- out1 %&gt;% filter(name=='Index2' & platform=='FIMS init')\nx2 &lt;- out2 %&gt;% filter(name=='Index2' & platform=='FIMS opt')\nlines(years,x1$value, col=2, lwd=1.5)\nlines(years,x2$value, col=3, lwd=1.5)\naddsegs(yrs=pkdat0$srvyrs2, obs=pkdat0$indxsurv2, CV=pkdat0$indxsurv_log_sd2)\nlegend('topright', legend=c('TMB', 'FIMS init', 'FIMS opt'), lty=1, col=1:3)\nmtext('Survey 2', line=-1.5)\nplot(years, rep0$Eindxsurv3, type='l',\n     ylim=c(0,.6), lwd=5.5,\n      xlab=NA, ylab='Biomass (million t)')\nx1 &lt;- out1 %&gt;% filter(name=='Index3' & platform=='FIMS init')\nx2 &lt;- out2 %&gt;% filter(name=='Index3' & platform=='FIMS opt')\nlines(years,x1$value, col=2, lwd=1.5)\nlines(years,x2$value, col=3, lwd=1.5)\naddsegs(yrs=pkdat0$srvyrs3, obs=pkdat0$indxsurv3, CV=pkdat0$indxsurv_log_sd3)\nmtext('Survey 3', line=-1.5)\nlegend('topright', legend=c('TMB', 'FIMS init', 'FIMS opt'), lty=1, col=1:3)\nplot(years, rep0$Eindxsurv6, type='l',\n     ylim=c(0,2.6), lwd=5.5,\n      xlab=NA, ylab='Biomass (million t)')\nx1 &lt;- out1 %&gt;% filter(name=='Index6' & platform=='FIMS init')\nx2 &lt;- out2 %&gt;% filter(name=='Index6' & platform=='FIMS opt')\nlines(years,x1$value, col=2, lwd=1.5)\nlines(years,x2$value, col=3, lwd=1.5)\naddsegs(yrs=pkdat0$srvyrs6, obs=pkdat0$indxsurv6, CV=pkdat0$indxsurv_log_sd6)\nmtext('Survey 6', line=-1.5)\nlegend('topright', legend=c('TMB', 'FIMS init', 'FIMS opt'), lty=1, col=1:3)\ndev.off()"
  },
  {
    "objectID": "content/pc.html#comparison-figures-for-basic-model",
    "href": "content/pc.html#comparison-figures-for-basic-model",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Comparison figures for basic model",
    "text": "Comparison figures for basic model"
  },
  {
    "objectID": "content/pc.html#extra-analyses",
    "href": "content/pc.html#extra-analyses",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Extra analyses",
    "text": "Extra analyses\nTwo extra analyses are demonstrated. First is a likelihood profile over lnR0, showing component contributions and testing for data conflict (a Piner plot). The second is to run the model through the ‘Stan’ software using the ‘tmbstan’ R package. This samples from the posterior, which are put back into the model to get the posterior distribution for spawning stock biomass. Given its long run time the results are saved to a file and read in for post-hoc plotting.\n\n\nCode\n## Try a likelihood profile\ni &lt;- 68 # this will break if model is changed at all\nmap &lt;- parameters\nmap$p[i] &lt;- NA # map off R0 specified below\nmap$p &lt;- as.factor(map$p)\nxseq &lt;- as.numeric(c(opt$par[i],  seq(22,24, len=30)))\nres &lt;- list()\nfor(j in 1:length(xseq)){\n  print(j)\n  parameters$p[i] &lt;- xseq[j]\n  obj2 &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent = TRUE, map=map)\n  opt2 &lt;- TMBhelper::fit_tmb(obj2, getsd=FALSE, newtonsteps=0, control=list(trace=0))\n  out &lt;- obj2$report()\n  res[[j]] &lt;- data.frame(j=j, lnR0=xseq[j], total=out$jnll, index=out$index_nll,\n                         age=out$age_comp_nll,recruit=out$rec_nll, maxgrad=max(abs(obj$gr())))\n}\nres &lt;- bind_rows(res) %&gt;%\n  pivot_longer( cols=c(total, index, age, recruit)) %&gt;%\n  group_by(name) %&gt;% mutate(deltaNLL=value-min(value))\ng &lt;- ggplot(res, aes(lnR0, deltaNLL, color=name)) + geom_line()\ng &lt;- g+ geom_point(data=filter(res, deltaNLL==0), size=2) +\n  labs(y='Delta NLL', color='NLL component')\nggsave('figures/AFSC_PK_like_profile_R0.png', g, width=7, height=3.5)\n\n\n\n## ## Try Bayesian\n## library(tmbstan)\n## library(shinystan)\n## ## Some paraemters wandering off to Inf so fix those (need\n## ## priors). Needs a ton of work but is proof of concept. Major\n## ## problem is parallel fails.\n## map &lt;- parameters\n## ## parameters$p[65:66]\n## map$p[65:66] &lt;- NA # map off R0 specified below\n## map$p &lt;- as.factor(map$p)\n## obj3 &lt;- MakeADFun(data = list(), parameters, DLL = \"FIMS\", silent=TRUE, map=map)\n## opt3 &lt;- TMBhelper::fit_tmb(obj3, getsd=FALSE, newtonsteps=0, control=list(trace=0))\n## ## Fails when trying to do this in parallel unfortunately\n## fit &lt;- tmbstan(obj3, chains=1, cores=1, open_progress=FALSE,\n##                init='last.par.best', control=list(max_treedepth=10))\n## launch_shinystan(fit)\n## df &lt;- as.data.frame(fit)\n## df &lt;- df[,-ncol(df)] # drop lp__\n## ## for each posterior draw, report to get SSB\n## postreps &lt;- list()\n## for(ii in 1:nrow(df)){\n##   if(ii %% 10==0) print(ii)\n##   postreps[[ii]] &lt;- obj3$rep(df[ii,])\n## }\n## ssbpost &lt;- lapply(postreps, function(x) data.frame(year=years, ssb=x$ssb[[1]][-55]))%&gt;%\n##   bind_rows %&gt;% mutate(rep=rep(1:nrow(df), each=54))\n## saveRDS(ssbpost, file='pk_SSB_posteriors.RDS')\nssbpost &lt;- readRDS('data_files/pk_pollock_SSB_posteriors.RDS')\ng &lt;- ggplot(ssbpost, aes(year, ssb/1e9, group=rep)) + geom_line(alpha=.1) +\n  ylim(0,NA) + labs(x=NULL, y='SSB (M t)', title='Posterior demo (unconverged!)')\nggsave('figures/AFSC_PK_ssb_posterior.png', g, width=7, height=4, units='in')"
  },
  {
    "objectID": "content/pc.html#plots-for-extra-analyses",
    "href": "content/pc.html#plots-for-extra-analyses",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Plots for extra analyses",
    "text": "Plots for extra analyses"
  },
  {
    "objectID": "content/pc.html#comparison-table",
    "href": "content/pc.html#comparison-table",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "Comparison table",
    "text": "Comparison table\nThe likelihood components from the TMB model do not include constants and thus are not directly comparable. To be fixed later. Relative differences between the modified TMB model and FIMS implementation are given in the figure above."
  },
  {
    "objectID": "content/pc.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "href": "content/pc.html#what-was-your-experience-using-fims-what-could-we-do-to-improve-usability",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "What was your experience using FIMS? What could we do to improve usability?",
    "text": "What was your experience using FIMS? What could we do to improve usability?\nTo do"
  },
  {
    "objectID": "content/pc.html#list-any-issues-that-you-ran-into-or-found",
    "href": "content/pc.html#list-any-issues-that-you-ran-into-or-found",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "List any issues that you ran into or found",
    "text": "List any issues that you ran into or found\n\nOutput more derived quantities like selectivity, maturity, etc.\nNLL components are not separated by fleet and need to be. So age comp NLL for fleets 1 and 2 need to be separate to make, e.g., the likelihood profile plot above.\nNeed more ADREPORTed values like SSB"
  },
  {
    "objectID": "content/pc.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "href": "content/pc.html#what-features-are-most-important-to-add-based-on-this-case-study",
    "title": "AFSC Case Study Gulf of Alaska Walleye Pollock",
    "section": "What features are most important to add based on this case study?",
    "text": "What features are most important to add based on this case study?\n\nMore sophisticated control over selectivity so that ages 1 and 2 can be zeroed out for a double-logistic form, overriding the selectivity curve.\n\n\n\nCode\n# Clear C++ objects from memory\nclear()"
  }
]