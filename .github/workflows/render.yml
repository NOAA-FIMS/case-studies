on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - dev
      - 74-feature-set-up-renv
  workflow_dispatch:
  schedule: 
    - cron: '30 0 * * 0' # runs At 00:00 on Sunday

name: Render

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4 
        
      - name: Set up R (needed for Rmd)
        uses: r-lib/actions/setup-r@v2

      - name: Install system dependencies for R packages
        run: |
          sudo apt-get update
          sudo apt-get install -y libglpk-dev libxml2-dev libcurl4-openssl-dev libjpeg-dev libfontconfig1-dev pandoc
      
      - name: Determine renv profile
        id: profile
        run: |
          if [[ "${{ github.ref_name }}" == "dev" ]] || [[ "${{ github.base_ref }}" == "dev" ]]; then
            echo "profile=dev" >> $GITHUB_OUTPUT
          else
            echo "profile=default" >> $GITHUB_OUTPUT
          fi

      - name: Print the output
        run: |
          echo "The profile is: ${{ steps.profile.outputs.profile }}"

      - name: Check renv profile
        run: |
          Rscript -e "install.packages('renv', repos = 'https://cloud.r-project.org')"
          profile="${{ steps.profile.outputs.profile }}"
          echo "Using profile: $profile"
          if [[ "$profile" == "dev" ]] && [[ -f "renv/profiles/dev/renv.lock" ]]; then
            Rscript -e "renv::activate(profile = 'dev')"
            lockfile="renv/profiles/dev/renv.lock"
          else
            Rscript -e "renv::activate()"
            lockfile="renv/renv.lock"
          fi

          echo "Using lockfile: $lockfile"

          Rscript -e "
            lockfile <- '${lockfile}'
            if (file.exists(lockfile)) {
              lock <- renv::lockfile_read(lockfile)
              cat('Successfully read dev profile with', length(lock\$Packages), 'packages\n')
              pkg_name <- 'FIMS'  # replace with your package
              if (pkg_name %in% names(lock\$Packages)) {
                pkg_info <- lock\$Packages[[pkg_name]]
                cat('Package:', pkg_name, '\n')
                cat('Version:', pkg_info\$Version, '\n')
                cat('Source:', pkg_info\$Source, '\n')
                if (!is.null(pkg_info\$RemoteRepo)) cat('Repository:', pkg_info\$RemoteRepo, '\n')
                if (!is.null(pkg_info\$RemoteRef)) cat('Git Ref:', pkg_info\$RemoteRef, '\n')
              } else {
                cat('Package not found in lockfile\n')
              }
            } else {
              cat('Dev profile lockfile not found at:', dev_lockfile, '\n')
              # Check what files actually exist
              if (dir.exists('renv/profiles/dev')) {
                files <- list.files('renv/profiles/dev', full.names = TRUE)
                cat('Files in dev profile dir:', paste(files, collapse = ', '), '\n')
              }
            }"
  

      # - name: Install R packages with renv
      #   uses: r-lib/actions/setup-renv@v2
      #   env:
      #     RENV_PROFILE: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main' && '' || 'dev' }}

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
        with:
          # To install LaTeX to build PDF book 
          tinytex: true 
          # uncomment below and fill to pin a version
          # version: 0.9.600
      
      # add software dependencies here

      # - name: Render Quarto Project 
      #   uses: quarto-dev/quarto-actions/render@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # this secret is always available for github actions

      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v3
