---
title: AFSC Case Study BSAI Atka mackerel
format:
  html:
    code-fold: true
editor_options: 
  chunk_output_type: console
---

## The setup

{{< include setup.qmd >}}

```{r}
#| warning: false
#| label: startup
#| output: false

theme_set(theme_bw())


# R_version <- version$version.string
# TMB_version <- packageDescription("TMB")$Version
# FIMS_commit <- substr(packageDescription("FIMS")$GithubSHA1, 1, 7)
```

-   R version: `r R_version`\
-   TMB version: `r TMB_version`\
-   FIMS commit: `r FIMS_commit`\
-   Stock name: BSAI Atka mackerel\
-   Region: AFSC\
-   Analyst: Jim Ianelli \

## Simplifications to the original assessment

The model presented in this case study was changed substantially from the operational version and should not be considered reflective of the BSAI Atka mackerel stock. 

To get the opertional model to more closely match FIMS I:
* stumbled lots

## Script to prepare data for building FIMS object
```{r}
#| warning: false
#| label: prepare-fims-data
#| output: false

## define the dimensions and global variables
#  Opent the original AMAK file
atka_dat <- readRDS(here::here("content","data_files","atka_dat.RDS"))
atka_rep <- readRDS(here::here("content","data_files","atka_rep.RDS"))
## define the dimensions and global variables
years <- atka_dat[["stry"]]:atka_dat[["endyr"]]
nyears <- length(years)
nseasons <- 1
nages <- atka_dat[["n_ages"]]
ages <- seq(nages)

# This code only works with one fleet because I am not sure how fleet
# structures work in AMAK given we only have this example
catch <- data.frame(
  type = "landings",
  name = "fleet1",
  datestart = paste0(years, "-01-01"),
  dateend = paste0(years, "-12-31"),
  value = atka_dat[["catch"]],
  # TODO: translate cv to log sd
  uncertainty = sqrt(log(1.0 + atka_dat[["catch_cv"]]^2)),
  unit = "mt"
)
age_fishery <- atka_dat[["page_fsh"]] |>
  as.data.frame() |>
  dplyr::mutate(
    type = "age",
    name = "fleet1",
    datestart = paste0(atka_dat[["yrs_ages_fsh"]], "-01-01"),
    dateend = paste0(atka_dat[["yrs_ages_fsh"]], "-12-31"),
    uncertainty = atka_dat[["sample_ages_fsh"]],
    unit = "proportion",
    .before = "V1"
  ) |>
  tidyr::pivot_longer(cols = dplyr::starts_with("V"), names_prefix = "V", names_to = "age")
index <- data.frame(
  type = "index",
  name = "survey1",
  # TODO: automate getting the date out rather than hard coding
  datestart = paste0(atka_dat[["yrs_ind"]], "-07-15"),
  dateend = paste0(atka_dat[["yrs_ind"]], "-07-15"),
  value = atka_dat[["biom_ind"]],
  # TODO: Figure out the unit conversion needed here
  uncertainty = atka_dat$biom_std / atka_dat$biom_ind,
  unit = "mt"
)
age_survey <- atka_dat[["page_ind"]] |>
  as.data.frame() |>
  dplyr::mutate(
    type = "age",
    name = "survey1",
    # TODO: automate getting the date out rather than hard coding
    datestart = paste0(atka_dat[["yrs_ages_ind"]], "-07-15"),
    dateend = paste0(atka_dat[["yrs_ages_ind"]], "-07-15"),
    uncertainty = atka_dat[["sample_ages_ind"]],
    unit = "proportion",
    .before = "V1"
  ) |>
  tidyr::pivot_longer(cols = dplyr::starts_with("V"), names_prefix = "V", names_to = "age")
weight_at_age <- atka_dat[["wt_age_ind"]] |>
  as.data.frame() |>
   dplyr::mutate(
    type = "weight-at-age",
    name = "survey1",
    datestart = paste0(years, "-07-15"),
    dateend = paste0(years, "-07-15"),
    uncertainty = 1,
    unit = "mt",
    .before = "V1"
  ) |>
  tidyr::pivot_longer(cols = dplyr::starts_with("V"), names_prefix = "V", names_to = "age") |>
  # TODO: Double check that weight original weight at age is in g
  dplyr::mutate(
    value = value / 1000
  )
data <- dplyr::bind_rows(
  catch,
  age_fishery,
  age_survey,
  index,
  weight_at_age
) |>
  dplyr::mutate(
    age = as.numeric(age)
  )
fims_data <- FIMSFrame(data)
```




How I simplified my assessment:
* Haven't got there yet...


## Script that sets up and runs the model

```{r}
#| label: run-FIMS
#| output: false
#| eval: true
fleet1 <- survey1 <- list(
  selectivity = list(form = "LogisticSelectivity"),
  data_distribution = c(
    Index = "DlnormDistribution",
    AgeComp = "DmultinomDistribution"
  )
)

# Determine maturity in logistic form
atka_dat[["maturity"]] |> 
cbind(execute_logistic(ages, 2.25, 3.65)) |>
ggplot2::ggplot(ggplot2::aes(x, value)) +
ggplot2::geom_line() +
ggplot2::geom_line(ggplot2::aes(x, `atka_dat[["maturity"]]`), color = "blue")

default_parameters <- create_default_parameters(
  fims_data,
  fleets = list(
    fleet1 = fleet1,
    survey1 = survey1
  )
) |>
  update_parameters(
    modified_parameters = list(
      maturity = list(
        LogisticMaturity.inflection_point.value = 3.65,
        LogisticMaturity.inflection_point.estimated = FALSE,
        LogisticMaturity.slope.value = 2.25,
        LogisticMaturity.slope.estimated = FALSE
      ),
      population = list(
        Population.log_M.value = log(c(atka_rep[["M"]])),
        Population.log_init_naa.estimated = TRUE
      ),
      recruitment = list(
        BevertonHoltRecruitment.log_rzero.value = log(atka_rep[[8]]),
        BevertonHoltRecruitment.logit_steep.value = -log(1.0 - atka_rep[["Steep"]][2]) +
          log(atka_rep[["Steep"]][2] - 0.2),
        DnormDistribution.log_sd.value = 0.5
      ),
      survey1 = list(
        Fleet.log_q.value = 0,
        Fleet.log_q.estimated = TRUE
      )
    )
  )

fit <- default_parameters |>
  initialize_fims(data = fims_data) |>
  fit_fims(optimize = TRUE)
```

```{r}
#| label: results
#| output: false
#| eval: true
#| 

get_data(fims_data) |>
  dplyr::filter(type == "landings") |>
  dplyr::mutate(
    year = dplyr::row_number() + get_start_year(fims_data) - 1,
    expected = get_report(fit)$exp_catch[[1]]
  ) |>
  ggplot2::ggplot(
    ggplot2::aes(year, value)
  ) +
  ggplot2::geom_point() +
  ggplot2::geom_line(
    ggplot2::aes(y = expected)
  ) +
  ggplot2::xlab("Year") +
  ggplot2::ylab("Landings (t)")

get_estimates(fit) |>
  dplyr::filter(grepl("SB", name, ignore.case = TRUE)) |>
  dplyr::mutate(
    year = (get_start_year(fims_data)- 1):get_end_year(fims_data)
  ) |>
  ggplot2::ggplot(
    ggplot2::aes(x = year, y = value)
  ) +
  ggplot2::geom_line() +
  ggplot2::xlab("Year") +
  ggplot2::ylab("Spawning biomass (t)")

get_estimates(fit) |>
  dplyr::filter(grepl("Index", name)) |>
  dplyr::mutate(
    year = rep(1:(dplyr::n() / 2), 2) + get_start_year(fims_data) - 1,
    fleet = rep(c("Fishery estimated", "Estimated"), each = dplyr::n() / 2)
  ) |>
  dplyr::filter(
    fleet == "Estimated"
  ) |>
  ggplot2::ggplot(
    ggplot2::aes(year, value, group = fleet, color = as.factor(fleet))
  ) +
  ggplot2::geom_line() +
  ggplot2::geom_point(
    data = fims_data |>
      get_data() |> 
      dplyr::filter(type == "index", name == "survey1") |>
      dplyr::mutate(year = year, fleet = "Data"),
    ggplot2::aes(y = value, x = year)
  ) +
  ggplot2::scale_color_brewer(palette = "Dark2", name = "Method") +
  ggplot2::xlab("Year") +
  ggplot2::ylab("Index of abundance (t)")
```
